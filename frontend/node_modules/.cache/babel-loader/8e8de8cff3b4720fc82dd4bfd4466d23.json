{"ast":null,"code":"var _jsxFileName = \"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/frontend/src/pages/Vrf.js\",\n    _s = $RefreshSig$();\n\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport FlashSuccess from \"../components/flashSuccess\"; //const rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\n//const web3 = new Web3(rpcURL);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"have\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"want\",\n    type: \"address\"\n  }],\n  name: \"OnlyCoordinatorCanFulfill\",\n  type: \"error\"\n}, {\n  anonymous: false,\n  inputs: [],\n  name: \"lightShowUpdate\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"requestId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"randomWords\",\n    type: \"uint256[]\"\n  }],\n  name: \"rawFulfillRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"requestRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  name: \"twoRandomWords\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst contractDefined_JS = new web3.eth.Contract(contractABI_JS, contractAddress_JS);\nexport default function Vrf(_ref) {\n  _s();\n\n  let {} = _ref;\n  const [colorSet1, setColourSet1] = useState();\n  const [colorSet2, setColourSet2] = useState();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const {\n    account\n  } = useWeb3React();\n  let ArrayStorage = [];\n\n  async function updateLights() {\n    if (ArrayStorage.length === 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods.twoRandomWords(randomNumbers).call((err, balance) => {\n          ArrayStorage.push(balance % 255 + 1);\n        });\n      }\n\n      console.log(ArrayStorage[0].toString(2));\n      setColourSet1(ArrayStorage[0]);\n      setColourSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const chainId = await web3.eth.getChainId();\n      console.log(chainId);\n\n      if (chainId !== 4) {\n        setErrorMsg(\"Must be on the Rinkeby test network\"); //Error message here\n      } //Load the smart contract\n\n\n      eventListener();\n    };\n\n    loadBlockchainData();\n  }, []);\n\n  const eventListener = () => {\n    contractDefined_JS.events.lightShowUpdate({\n      fromBlock: \"latest\"\n    }, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n      //Call the get function to get the most accurate present state for the value.\n      //Do a wait 30s here\n      console.log(\"eventlistner triggered!\");\n      window.location.reload();\n    }).on(\"changed\", function (eventResult) {// remove event from local database\n    }).on(\"error\", console.error);\n  };\n\n  const handleRandomNrCall = () => {\n    console.log(account, \"account in BUY handle click\", contractAddress_JS);\n\n    try {\n      web3.eth.sendTransaction({\n        to: contractAddress_JS,\n        data: contractDefined_JS.methods.requestRandomWords().encodeABI(),\n        from: account\n      });\n    } catch (err) {\n      const msg = \"Connect your wallet to buy\";\n      console.log(err, msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  const colorSetInColor = colorSet => {\n    var n = colorSet.toString(2);\n    n = \"00000000\".substr(n.length) + n;\n    let chars = Array.from(n);\n    console.log(chars);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"grey\",\n          fontStyle: \"normal\",\n          fontSize: \"26px\",\n          padding: \"4px 8px\",\n          borderRadius: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"white\",\n            fontStyle: \"normal\"\n          },\n          children: chars[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"pink\",\n            fontStyle: \"normal\"\n          },\n          children: chars[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"orange\",\n            fontStyle: \"normal\"\n          },\n          children: chars[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"purple\",\n            fontStyle: \"normal\"\n          },\n          children: chars[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"green\",\n            fontStyle: \"normal\"\n          },\n          children: chars[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"yellow\",\n            fontStyle: \"normal\"\n          },\n          children: chars[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"blue\",\n            fontStyle: \"normal\"\n          },\n          children: chars[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"red\",\n            fontStyle: \"normal\"\n          },\n          children: chars[7]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"VRF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), colorSet1 && colorSet2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Colour Set 1: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\\xA0\", colorSet1, \"\\xA0\\xA0\\xA0\", colorSetInColor(colorSet1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Colour Set 2: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\\xA0\", colorSet2, \"\\xA0\\xA0\\xA0\", colorSetInColor(colorSet2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: 400\n          },\n          className: \"btn-hover color-electric\",\n          onClick: () => handleRandomNrCall(),\n          children: \"Request 2 random VRFv2 numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: EthLogo,\n          style: {\n            width: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), errorMsg !== \"\" ? /*#__PURE__*/_jsxDEV(ErrorModal, {\n      showToastFromProp: errorMsg !== \"\",\n      onClose: () => setErrorMsg(\"\"),\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(FlashSuccess, {\n      show: successMsg !== \"\",\n      onClose: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vrf, \"9djRo0IO8LZNy0fyHzfdLmvlISg=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Vrf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vrf\");","map":{"version":3,"sources":["/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/frontend/src/pages/Vrf.js"],"names":["useState","useEffect","Web3","useWeb3React","ErrorModal","FlashSuccess","web3","givenProvider","contractAddress_JS","contractABI_JS","inputs","internalType","name","type","anonymous","outputs","stateMutability","contractDefined_JS","eth","Contract","Vrf","colorSet1","setColourSet1","colorSet2","setColourSet2","errorMsg","setErrorMsg","successMsg","setSuccessMsg","account","ArrayStorage","updateLights","length","randomNumbers","console","log","methods","twoRandomWords","call","err","balance","push","toString","loadBlockchainData","chainId","getChainId","eventListener","events","lightShowUpdate","fromBlock","error","eventResult","on","window","location","reload","handleRandomNrCall","sendTransaction","to","data","requestRandomWords","encodeABI","from","msg","colorSetInColor","colorSet","n","substr","chars","Array","backgroundColor","fontStyle","fontSize","padding","borderRadius","color","width","EthLogo"],"mappings":"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","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport {  useWeb3React } from \"@web3-react/core\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport FlashSuccess from \"../components/flashSuccess\";\n\n//const rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\n//const web3 = new Web3(rpcURL);\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"have\", type: \"address\" },\n      { internalType: \"address\", name: \"want\", type: \"address\" },\n    ],\n    name: \"OnlyCoordinatorCanFulfill\",\n    type: \"error\",\n  },\n  { anonymous: false, inputs: [], name: \"lightShowUpdate\", type: \"event\" },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"requestId\", type: \"uint256\" },\n      { internalType: \"uint256[]\", name: \"randomWords\", type: \"uint256[]\" },\n    ],\n    name: \"rawFulfillRandomWords\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"requestRandomWords\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"twoRandomWords\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst contractDefined_JS = new web3.eth.Contract(\n  contractABI_JS,\n  contractAddress_JS\n);\n\nexport default function Vrf({  }) {\n  const [colorSet1, setColourSet1] = useState();\n  const [colorSet2, setColourSet2] = useState();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const { account } = useWeb3React();\n\n\n  let ArrayStorage = [];\n\n  async function updateLights() {\n    if (ArrayStorage.length === 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods\n          .twoRandomWords(randomNumbers)\n          .call((err, balance) => {\n            ArrayStorage.push((balance % 255) + 1);\n          });\n      }\n      console.log(ArrayStorage[0].toString(2));\n      setColourSet1(ArrayStorage[0]);\n      setColourSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const chainId = await web3.eth.getChainId();\n      console.log(chainId);\n      if (chainId !== 4) {\n        setErrorMsg(\"Must be on the Rinkeby test network\");\n        //Error message here\n      }\n\n      //Load the smart contract\n  \n      eventListener();\n    };\n    loadBlockchainData();\n  }, []);\n\n\n  const eventListener = () => {\n    contractDefined_JS.events\n      .lightShowUpdate(\n        {\n          fromBlock: \"latest\",\n        },\n        function (error, eventResult) {}\n      )\n      .on(\"data\", function (eventResult) {\n        //Call the get function to get the most accurate present state for the value.\n\n        //Do a wait 30s here\n        console.log(\"eventlistner triggered!\");\n        window.location.reload();\n      })\n      .on(\"changed\", function (eventResult) {\n        // remove event from local database\n      })\n      .on(\"error\", console.error);\n  };\n\n  const handleRandomNrCall = () => {\n    console.log(account, \"account in BUY handle click\", contractAddress_JS);\n    try {\n      web3.eth.sendTransaction({\n        to: contractAddress_JS,\n        data: contractDefined_JS.methods.requestRandomWords().encodeABI(),\n        from: account,\n      });\n    } catch (err) {\n      const msg = \"Connect your wallet to buy\";\n      console.log(err, msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  const colorSetInColor = (colorSet) => {\n    var n = colorSet.toString(2);\n    n = \"00000000\".substr(n.length) + n;\n    let chars = Array.from(n);\n    console.log(chars);\n    return (\n      <>\n        <div\n          style={{\n            backgroundColor: \"grey\",\n            fontStyle: \"normal\",\n            fontSize: \"26px\",\n            padding: \"4px 8px\",\n            borderRadius: \"10px\",\n          }}\n        >\n          <em style={{ color: \"white\", fontStyle: \"normal\" }}>{chars[0]}</em>\n          <em style={{ color: \"pink\", fontStyle: \"normal\" }}>{chars[1]}</em>\n          <em style={{ color: \"orange\", fontStyle: \"normal\" }}>{chars[2]}</em>\n          <em style={{ color: \"purple\", fontStyle: \"normal\" }}>{chars[3]}</em>\n          <em style={{ color: \"green\", fontStyle: \"normal\" }}>{chars[4]}</em>\n          <em style={{ color: \"yellow\", fontStyle: \"normal\" }}>{chars[5]}</em>\n          <em style={{ color: \"blue\", fontStyle: \"normal\" }}>{chars[6]}</em>\n          <em style={{ color: \"red\", fontStyle: \"normal\" }}>{chars[7]}</em>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-5\">\n          <h1>\n            <br></br>\n            <b>VRF</b>\n          </h1>\n          {colorSet1 && colorSet2 ? (\n            <>\n              <p>\n                <b>Colour Set 1: </b>\n                &nbsp;&nbsp;&nbsp;\n                {colorSet1}\n                &nbsp;&nbsp;&nbsp;\n                {colorSetInColor(colorSet1)}\n              </p>\n              <p>\n                <b>Colour Set 2: </b>\n                &nbsp;&nbsp;&nbsp;\n                {colorSet2}\n                &nbsp;&nbsp;&nbsp;\n                {/* {colorSet2.toString(2)} */}\n                {colorSetInColor(colorSet2)}\n              </p>\n            </>\n          ) : (\n            \"\"\n          )}\n          {/* <p><b></b>{colorSet2}</p> */}\n          <p></p>\n          <br></br>\n        <button\n          style={{ width: 400 }}\n          className=\"btn-hover color-electric\"\n          onClick={() => handleRandomNrCall()}\n        >\n          Request 2 random VRFv2 numbers\n        </button>\n        </div>\n        <div class=\"col-6\">\n          <img src={EthLogo} style={{ width: \"40%\" }} />\n        </div>\n        <div class=\"col\"></div>\n      </div>\n      {errorMsg !== \"\" ? (\n              <ErrorModal\n                showToastFromProp={errorMsg !== \"\"}\n                onClose={() => setErrorMsg(\"\")}\n                errorMsg={errorMsg}\n              ></ErrorModal>\n            ) : null}\n\n          <FlashSuccess show={successMsg !== \"\"} onClose={() =>{}}></FlashSuccess>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}