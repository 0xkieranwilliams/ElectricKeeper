{"ast":null,"code":"var _jsxFileName = \"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/frontend/src/pages/vrf.js\";\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Web3 = require(\"web3\"); //HIDE KEYS WITH \"Linux Environment Variables\" https://www.youtube.com/watch?v=himEMfYQJ1w \"vim .bashrc\" > \"i\" > update > \"esc\" > \":w\" enter\n\n\nconst rpcURL = process.env.rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n\nconst web3 = new Web3(rpcURL);\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"have\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"want\",\n    type: \"address\"\n  }],\n  name: \"OnlyCoordinatorCanFulfill\",\n  type: \"error\"\n}, {\n  anonymous: false,\n  inputs: [],\n  name: \"lightShowUpdate\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"requestId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"randomWords\",\n    type: \"uint256[]\"\n  }],\n  name: \"rawFulfillRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"requestRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  name: \"twoRandomWords\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst contractDefined_JS = new web3.eth.Contract(contractABI_JS, contractAddress_JS); //https://github.com/sarfata/pi-blaster\n//Build and install directly from source\n// var piblaster = require('pi-blaster.js');\n\nconst timeMilliSec = 1000; //2 seconds per value\n\nconst pulseWidthMin = 0.0;\nconst pulseWidthMax = 0.35;\nlet objectLED = {\n  pin: [21, 25, 23, 22, 24, 27, 17, 18],\n  color: [\"RED\", \"BLUE\", \"YELLOW\", \"GREEN\", \"PURPLE\", \"ORANGE\", \"PINK\", \"WHITE\"]\n};\nlet ArrayStorage = [];\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function updateLights() {\n  while (true) {\n    if (ArrayStorage.length == 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        contractDefined_JS.methods.twoRandomWords(randomNumbers).call((err, balance) => {\n          ArrayStorage.push(balance % 255);\n        });\n        await timeout(timeMilliSec);\n      }\n    }\n\n    if (ArrayStorage.length > 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        for (let i = 0; i < 2; i++) {\n          console.log(ArrayStorage[i]);\n\n          for (let ledValue = 0; ledValue < 8; ledValue++) {\n            if ((ArrayStorage[i] & 2 ** ledValue) == 2 ** ledValue) {\n              console.log(\"COLOR \" + objectLED[\"color\"][ledValue] + \" PIN \" + objectLED[\"pin\"][ledValue] + \" ON!\");\n            } else {\n              console.log(\"COLOR \" + objectLED[\"color\"][ledValue] + \" PIN \" + objectLED[\"pin\"][ledValue] + \" OFF!\");\n            }\n          }\n\n          await timeout(timeMilliSec);\n        }\n      }\n    }\n  }\n}\n\nconsole.log(\"Contract starting value:\");\nupdateLights();\ncontractDefined_JS.events.lightShowUpdate({\n  //Subscribe to event.\n  fromBlock: \"latest\"\n}, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n  console.log(\"EVENT DETECTED! NEW STATE VALUE: \");\n  ArrayStorage = []; //WIPE LAST VALUES THEN UPDATE AGAIN.\n\n  updateLights(); //Call the get function to get the most accurate present state for the value.\n}).on(\"changed\", function (eventResult) {// remove event from local database\n}).on(\"error\", console.error);\n\nconst vrf = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submission for the ETH Denver Virtual Hackathon #BUIDL event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: EthLogo,\n          style: {\n            width: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\nexport default vrf;","map":{"version":3,"sources":["/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/frontend/src/pages/vrf.js"],"names":["Web3","require","rpcURL","process","env","rinkebyWebSocketSecureEventsInfuraAPIKey","web3","contractAddress_JS","contractABI_JS","inputs","internalType","name","type","anonymous","outputs","stateMutability","contractDefined_JS","eth","Contract","timeMilliSec","pulseWidthMin","pulseWidthMax","objectLED","pin","color","ArrayStorage","timeout","ms","Promise","resolve","setTimeout","updateLights","length","randomNumbers","console","log","methods","twoRandomWords","call","err","balance","push","i","ledValue","events","lightShowUpdate","fromBlock","error","eventResult","on","vrf","EthLogo","width"],"mappings":";;;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAA8B;;;AAC9B,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,wCAA3B,C,CAAqE;;AACrE,MAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASE,MAAT,CAAb;AACA,MAAMK,kBAAkB,GAAG,4CAA3B;AACA,MAAMC,cAAc,GAAG,CAAE;AAAEC,EAAAA,MAAM,EAAE,CAAE;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,MAAjC;AAAyCC,IAAAA,IAAI,EAAE;AAA/C,GAAF,EAA8D;AAAEF,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,MAAjC;AAAyCC,IAAAA,IAAI,EAAE;AAA/C,GAA9D,CAAV;AAAuID,EAAAA,IAAI,EAAE,2BAA7I;AAA0KC,EAAAA,IAAI,EAAE;AAAhL,CAAF,EAA8L;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBJ,EAAAA,MAAM,EAAE,EAA5B;AAAgCE,EAAAA,IAAI,EAAE,iBAAtC;AAAyDC,EAAAA,IAAI,EAAE;AAA/D,CAA9L,EAAwQ;AAAEH,EAAAA,MAAM,EAAE,CAAE;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,WAAjC;AAA8CC,IAAAA,IAAI,EAAE;AAApD,GAAF,EAAmE;AAAEF,IAAAA,YAAY,EAAE,WAAhB;AAA6BC,IAAAA,IAAI,EAAE,aAAnC;AAAkDC,IAAAA,IAAI,EAAE;AAAxD,GAAnE,CAAV;AAAuJD,EAAAA,IAAI,EAAE,uBAA7J;AAAsLG,EAAAA,OAAO,EAAE,EAA/L;AAAmMC,EAAAA,eAAe,EAAE,YAApN;AAAkOH,EAAAA,IAAI,EAAE;AAAxO,CAAxQ,EAA+f;AAAEH,EAAAA,MAAM,EAAE,EAAV;AAAcE,EAAAA,IAAI,EAAE,oBAApB;AAA0CG,EAAAA,OAAO,EAAE,EAAnD;AAAuDC,EAAAA,eAAe,EAAE,YAAxE;AAAsFH,EAAAA,IAAI,EAAE;AAA5F,CAA/f,EAA0mB;AAAEH,EAAAA,MAAM,EAAE,EAAV;AAAcM,EAAAA,eAAe,EAAE,YAA/B;AAA6CH,EAAAA,IAAI,EAAE;AAAnD,CAA1mB,EAA8qB;AAAEH,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,EAAjC;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAAD,CAAV;AAAoED,EAAAA,IAAI,EAAE,gBAA1E;AAA4FG,EAAAA,OAAO,EAAE,CAAC;AAAEJ,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,EAAjC;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAAD,CAArG;AAA+JG,EAAAA,eAAe,EAAE,MAAhL;AAAuLH,EAAAA,IAAI,EAAE;AAA7L,CAA9qB,CAAvB;AACA,MAAMI,kBAAkB,GAAG,IAAIV,IAAI,CAACW,GAAL,CAASC,QAAb,CACzBV,cADyB,EAEzBD,kBAFyB,CAA3B,C,CAKA;AACA;AACA;;AACA,MAAMY,YAAY,GAAG,IAArB,C,CAA2B;;AAC3B,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,aAAa,GAAG,IAAtB;AAEA,IAAIC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,CADS;AAEdC,EAAAA,KAAK,EAAE,CACL,KADK,EAEL,MAFK,EAGL,QAHK,EAIL,OAJK,EAKL,QALK,EAML,QANK,EAOL,MAPK,EAQL,OARK;AAFO,CAAhB;AAcA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AACnB,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD;;AAED,eAAeI,YAAf,GAA8B;AAC5B,SAAO,IAAP,EAAa;AACX,QAAIN,YAAY,CAACO,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,WAAK,IAAIC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAG,CAA5C,EAA+CA,aAAa,EAA5D,EAAgE;AAC9DC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAnB,QAAAA,kBAAkB,CAACoB,OAAnB,CACGC,cADH,CACkBJ,aADlB,EAEGK,IAFH,CAEQ,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACtBf,UAAAA,YAAY,CAACgB,IAAb,CAAkBD,OAAO,GAAG,GAA5B;AACD,SAJH;AAKA,cAAMd,OAAO,CAACP,YAAD,CAAb;AACD;AACF;;AACD,QAAIM,YAAY,CAACO,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,WAAK,IAAIC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAG,CAA5C,EAA+CA,aAAa,EAA5D,EAAgE;AAC9D,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BR,UAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAACiB,CAAD,CAAxB;;AACA,eAAK,IAAIC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG,CAAlC,EAAqCA,QAAQ,EAA7C,EAAiD;AAC/C,gBAAI,CAAClB,YAAY,CAACiB,CAAD,CAAZ,GAAmB,KAAKC,QAAzB,KAAuC,KAAKA,QAAhD,EAA0D;AACxDT,cAAAA,OAAO,CAACC,GAAR,CACE,WACEb,SAAS,CAAC,OAAD,CAAT,CAAmBqB,QAAnB,CADF,GAEE,OAFF,GAGErB,SAAS,CAAC,KAAD,CAAT,CAAiBqB,QAAjB,CAHF,GAIE,MALJ;AAOD,aARD,MAQO;AACLT,cAAAA,OAAO,CAACC,GAAR,CACE,WACEb,SAAS,CAAC,OAAD,CAAT,CAAmBqB,QAAnB,CADF,GAEE,OAFF,GAGErB,SAAS,CAAC,KAAD,CAAT,CAAiBqB,QAAjB,CAHF,GAIE,OALJ;AAOD;AACF;;AACD,gBAAMjB,OAAO,CAACP,YAAD,CAAb;AACD;AACF;AACF;AACF;AACF;;AAEDe,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAJ,YAAY;AAEZf,kBAAkB,CAAC4B,MAAnB,CACGC,eADH,CAEI;AACE;AACAC,EAAAA,SAAS,EAAE;AAFb,CAFJ,EAMI,UAAUC,KAAV,EAAiBC,WAAjB,EAA8B,CAAE,CANpC,EAQGC,EARH,CAQM,MARN,EAQc,UAAUD,WAAV,EAAuB;AACjCd,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAV,EAAAA,YAAY,GAAG,EAAf,CAFiC,CAEd;;AACnBM,EAAAA,YAAY,GAHqB,CAGjB;AACjB,CAZH,EAaGkB,EAbH,CAaM,SAbN,EAaiB,UAAUD,WAAV,EAAuB,CACpC;AACD,CAfH,EAgBGC,EAhBH,CAgBM,OAhBN,EAgBef,OAAO,CAACa,KAhBvB;;AAmBA,MAAMG,GAAG,GAAG,MAAM;AAChB,sBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACE;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA,kBAAJ,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBD;;AAoBA,eAAeF,GAAf","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nconst Web3 = require(\"web3\"); //HIDE KEYS WITH \"Linux Environment Variables\" https://www.youtube.com/watch?v=himEMfYQJ1w \"vim .bashrc\" > \"i\" > update > \"esc\" > \":w\" enter\nconst rpcURL = process.env.rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\nconst web3 = new Web3(rpcURL);\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [ { inputs: [ { internalType: \"address\", name: \"have\", type: \"address\" }, { internalType: \"address\", name: \"want\", type: \"address\" }, ], name: \"OnlyCoordinatorCanFulfill\", type: \"error\", }, { anonymous: false, inputs: [], name: \"lightShowUpdate\", type: \"event\" }, { inputs: [ { internalType: \"uint256\", name: \"requestId\", type: \"uint256\" }, { internalType: \"uint256[]\", name: \"randomWords\", type: \"uint256[]\" }, ], name: \"rawFulfillRandomWords\", outputs: [], stateMutability: \"nonpayable\", type: \"function\", }, { inputs: [], name: \"requestRandomWords\", outputs: [], stateMutability: \"nonpayable\", type: \"function\", }, { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" }, { inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], name: \"twoRandomWords\", outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], stateMutability: \"view\",type: \"function\",},];\nconst contractDefined_JS = new web3.eth.Contract(\n  contractABI_JS,\n  contractAddress_JS\n);\n\n//https://github.com/sarfata/pi-blaster\n//Build and install directly from source\n// var piblaster = require('pi-blaster.js');\nconst timeMilliSec = 1000; //2 seconds per value\nconst pulseWidthMin = 0.0;\nconst pulseWidthMax = 0.35;\n\nlet objectLED = {\n  pin: [21, 25, 23, 22, 24, 27, 17, 18],\n  color: [\n    \"RED\",\n    \"BLUE\",\n    \"YELLOW\",\n    \"GREEN\",\n    \"PURPLE\",\n    \"ORANGE\",\n    \"PINK\",\n    \"WHITE\",\n  ],\n};\n\nlet ArrayStorage = [];\n\nfunction timeout(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function updateLights() {\n  while (true) {\n    if (ArrayStorage.length == 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        contractDefined_JS.methods\n          .twoRandomWords(randomNumbers)\n          .call((err, balance) => {\n            ArrayStorage.push(balance % 255);\n          });\n        await timeout(timeMilliSec);\n      }\n    }\n    if (ArrayStorage.length > 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        for (let i = 0; i < 2; i++) {\n          console.log(ArrayStorage[i]);\n          for (let ledValue = 0; ledValue < 8; ledValue++) {\n            if ((ArrayStorage[i] & (2 ** ledValue)) == 2 ** ledValue) {\n              console.log(\n                \"COLOR \" +\n                  objectLED[\"color\"][ledValue] +\n                  \" PIN \" +\n                  objectLED[\"pin\"][ledValue] +\n                  \" ON!\"\n              );\n            } else {\n              console.log(\n                \"COLOR \" +\n                  objectLED[\"color\"][ledValue] +\n                  \" PIN \" +\n                  objectLED[\"pin\"][ledValue] +\n                  \" OFF!\"\n              );\n            }\n          }\n          await timeout(timeMilliSec);\n        }\n      }\n    }\n  }\n}\n\nconsole.log(\"Contract starting value:\");\nupdateLights();\n\ncontractDefined_JS.events\n  .lightShowUpdate(\n    {\n      //Subscribe to event.\n      fromBlock: \"latest\",\n    },\n    function (error, eventResult) {}\n  )\n  .on(\"data\", function (eventResult) {\n    console.log(\"EVENT DETECTED! NEW STATE VALUE: \");\n    ArrayStorage = []; //WIPE LAST VALUES THEN UPDATE AGAIN.\n    updateLights(); //Call the get function to get the most accurate present state for the value.\n  })\n  .on(\"changed\", function (eventResult) {\n    // remove event from local database\n  })\n  .on(\"error\", console.error);\n\n\nconst vrf = () => {\n  return (\n    <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <h1><br></br>\n          <b>About</b>\n        </h1>\n        <p>Submission for the ETH Denver Virtual Hackathon #BUIDL event</p>\n          <br></br>\n       </div>\n      <div class=\"col-6\">\n        <img src={EthLogo} style={{ width: \"40%\" }} />\n      </div>\n      <div class=\"col\"></div>\n    </div>\n  </div>\n  );\n};\n\nexport default vrf;\n"]},"metadata":{},"sourceType":"module"}