{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Vrf.js\",\n    _s = $RefreshSig$();\n\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\n\nconst web3 = new Web3(rpcURL);\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"have\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"want\",\n    type: \"address\"\n  }],\n  name: \"OnlyCoordinatorCanFulfill\",\n  type: \"error\"\n}, {\n  anonymous: false,\n  inputs: [],\n  name: \"lightShowUpdate\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"requestId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"randomWords\",\n    type: \"uint256[]\"\n  }],\n  name: \"rawFulfillRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"requestRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  name: \"twoRandomWords\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst contractDefined_JS = new web3.eth.Contract(contractABI_JS, contractAddress_JS);\n\nconst Vrf = () => {\n  _s();\n\n  const [colorSet1, setColourSet1] = useState();\n  const [colorSet2, setColourSet2] = useState();\n  let ArrayStorage = [];\n\n  async function updateLights() {\n    if (ArrayStorage.length == 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods.twoRandomWords(randomNumbers).call((err, balance) => {\n          ArrayStorage.push(balance % 255);\n        });\n      }\n\n      console.log(ArrayStorage[0].toString(2));\n      setColourSet1(ArrayStorage[0]);\n      setColourSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      eventListener();\n    };\n\n    loadBlockchainData();\n  }, []);\n  /*   contractDefined_JS.events\n    .lightShowUpdate(\n      {\n        //Subscribe to event.\n        fromBlock: \"latest\",\n      },\n      function (error, eventResult) {}\n    )\n    .on(\"data\", function (eventResult) {\n      console.log(\"EVENT DETECTED! NEW STATE VALUE: \");\n      ArrayStorage = []; //WIPE LAST VALUES THEN UPDATE AGAIN.\n      updateLights(); //Call the get function to get the most accurate present state for the value.\n    })\n    .on(\"changed\", function (eventResult) {\n      // remove event from local database\n    })\n    .on(\"error\", console.error);\n  */\n\n  const eventListener = () => {\n    contractDefined_JS.events.lightShowUpdate({\n      fromBlock: \"latest\"\n    }, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n      //Call the get function to get the most accurate present state for the value.\n      //Do a wait 30s here\n      console.log(\"eventlistner triggered!\");\n    }).on(\"changed\", function (eventResult) {// remove event from local database\n    }).on(\"error\", console.error);\n  };\n\n  const colorSetInColor = colorSet => {\n    let chars = Array.from(colorSet.toString(2));\n    console.log(chars); // return colorSet.toString(2);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        style: {\n          backgroundColor: \"grey\",\n          fontStyle: \"normal\",\n          fontSize: \"26px\",\n          padding: \"4px 8px\",\n          borderRadius: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"white\",\n            fontStyle: \"normal\"\n          },\n          children: chars[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"pink\",\n            fontStyle: \"normal\"\n          },\n          children: chars[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"orange\",\n            fontStyle: \"normal\"\n          },\n          children: chars[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"purple\",\n            fontStyle: \"normal\"\n          },\n          children: chars[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"green\",\n            fontStyle: \"normal\"\n          },\n          children: chars[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"yellow\",\n            fontStyle: \"normal\"\n          },\n          children: chars[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"blue\",\n            fontStyle: \"normal\"\n          },\n          children: chars[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"red\",\n            fontStyle: \"normal\"\n          },\n          children: chars[7]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"VRF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), colorSet1 && colorSet2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Colour Set 1: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\\xA0\", colorSet1, \"\\xA0\\xA0\\xA0\", colorSetInColor(colorSet1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Colour Set 2: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\\xA0\", colorSet2, \"\\xA0\\xA0\\xA0\", colorSetInColor(colorSet2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: EthLogo,\n          style: {\n            width: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Vrf, \"MAEDxNCnYr0FRt6nrnEDauxfJ8g=\");\n\n_c = Vrf;\nexport default Vrf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vrf\");","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Vrf.js"],"names":["useState","useEffect","Web3","rpcURL","process","env","REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey","web3","contractAddress_JS","contractABI_JS","inputs","internalType","name","type","anonymous","outputs","stateMutability","contractDefined_JS","eth","Contract","Vrf","colorSet1","setColourSet1","colorSet2","setColourSet2","ArrayStorage","updateLights","length","randomNumbers","console","log","methods","twoRandomWords","call","err","balance","push","toString","loadBlockchainData","givenProvider","eventListener","events","lightShowUpdate","fromBlock","error","eventResult","on","colorSetInColor","colorSet","chars","Array","from","backgroundColor","fontStyle","fontSize","padding","borderRadius","color","EthLogo","width"],"mappings":"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","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nconst rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\nconst web3 = new Web3(rpcURL);\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"have\", type: \"address\" },\n      { internalType: \"address\", name: \"want\", type: \"address\" },\n    ],\n    name: \"OnlyCoordinatorCanFulfill\",\n    type: \"error\",\n  },\n  { anonymous: false, inputs: [], name: \"lightShowUpdate\", type: \"event\" },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"requestId\", type: \"uint256\" },\n      { internalType: \"uint256[]\", name: \"randomWords\", type: \"uint256[]\" },\n    ],\n    name: \"rawFulfillRandomWords\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"requestRandomWords\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"twoRandomWords\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst contractDefined_JS = new web3.eth.Contract(\n  contractABI_JS,\n  contractAddress_JS\n);\n\nconst Vrf = () => {\n  const [colorSet1, setColourSet1] = useState();\n  const [colorSet2, setColourSet2] = useState();\n\n  let ArrayStorage = [];\n\n  async function updateLights() {\n    if (ArrayStorage.length == 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods\n          .twoRandomWords(randomNumbers)\n          .call((err, balance) => {\n            ArrayStorage.push(balance % 255);\n          });\n      }\n      console.log(ArrayStorage[0].toString(2));\n      setColourSet1(ArrayStorage[0]);\n      setColourSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      eventListener();\n    };\n\n    loadBlockchainData();\n  }, []);\n\n  /*   contractDefined_JS.events\n    .lightShowUpdate(\n      {\n        //Subscribe to event.\n        fromBlock: \"latest\",\n      },\n      function (error, eventResult) {}\n    )\n    .on(\"data\", function (eventResult) {\n      console.log(\"EVENT DETECTED! NEW STATE VALUE: \");\n      ArrayStorage = []; //WIPE LAST VALUES THEN UPDATE AGAIN.\n      updateLights(); //Call the get function to get the most accurate present state for the value.\n    })\n    .on(\"changed\", function (eventResult) {\n      // remove event from local database\n    })\n    .on(\"error\", console.error);\n */\n\n  const eventListener = () => {\n    contractDefined_JS.events\n      .lightShowUpdate(\n        {\n          fromBlock: \"latest\",\n        },\n        function (error, eventResult) {}\n      )\n      .on(\"data\", function (eventResult) {\n        //Call the get function to get the most accurate present state for the value.\n\n        //Do a wait 30s here\n        console.log(\"eventlistner triggered!\");\n      })\n      .on(\"changed\", function (eventResult) {\n        // remove event from local database\n      })\n      .on(\"error\", console.error);\n  };\n\n  const colorSetInColor = (colorSet) => {\n    let chars = Array.from(colorSet.toString(2));\n    console.log(chars);\n    // return colorSet.toString(2);\n    return (\n      <>\n        <em\n          style={{\n            backgroundColor: \"grey\",\n            fontStyle: \"normal\",\n            fontSize: \"26px\",\n            padding: \"4px 8px\",\n            borderRadius: \"10px\",\n          }}\n        >\n          <em style={{ color: \"white\", fontStyle: \"normal\" }}>{chars[0]}</em>\n          <em style={{ color: \"pink\", fontStyle: \"normal\" }}>{chars[1]}</em>\n          <em style={{ color: \"orange\", fontStyle: \"normal\" }}>{chars[2]}</em>\n          <em style={{ color: \"purple\", fontStyle: \"normal\" }}>{chars[3]}</em>\n          <em style={{ color: \"green\", fontStyle: \"normal\" }}>{chars[4]}</em>\n          <em style={{ color: \"yellow\", fontStyle: \"normal\" }}>{chars[5]}</em>\n          <em style={{ color: \"blue\", fontStyle: \"normal\" }}>{chars[6]}</em>\n          <em style={{ color: \"red\", fontStyle: \"normal\" }}>{chars[7]}</em>\n        </em>\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-5\">\n          <h1>\n            <br></br>\n            <b>VRF</b>\n          </h1>\n          {colorSet1 && colorSet2 ? (\n            <>\n              <p>\n                <b>Colour Set 1: </b>\n                &nbsp;&nbsp;&nbsp;\n                {colorSet1}\n                &nbsp;&nbsp;&nbsp;\n                {colorSetInColor(colorSet1)}\n              </p>\n              <p>\n                <b>Colour Set 2: </b>\n                &nbsp;&nbsp;&nbsp;\n                {colorSet2}\n                &nbsp;&nbsp;&nbsp;\n                {/* {colorSet2.toString(2)} */}\n                {colorSetInColor(colorSet2)}\n              </p>\n            </>\n          ) : (\n            \"\"\n          )}\n          {/* <p><b></b>{colorSet2}</p> */}\n          <p></p>\n          <br></br>\n        </div>\n        <div class=\"col-6\">\n          <img src={EthLogo} style={{ width: \"40%\" }} />\n        </div>\n        <div class=\"col\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Vrf;\n"]},"metadata":{},"sourceType":"module"}