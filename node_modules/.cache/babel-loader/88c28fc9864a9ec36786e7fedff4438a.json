{"ast":null,"code":"import _regeneratorRuntime from\"/home/johanna/Desktop/weth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/johanna/Desktop/weth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/johanna/Desktop/weth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import EthLogo from\"../assets/svg/eth_logo.svg\";import React,{Component,useEffect,useState}from\"react\";import Web3 from\"web3\";import{ABI}from\"../config\";import ErrorModal from\"../components/ErrorModal\";import{act}from\"react-dom/cjs/react-dom-test-utils.production.min\";import{CHAIN_INFO,CONTRACT_ADDRESS}from\"../constants/chainInfo\";import{SUPPORTED_CHAIN_IDS,CHAIN_IDS_TO_NAMES}from\"../constants/chains\";import{DataContext}from'../DataContext';//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Wrap(_ref){var degree=_ref.degree,userLocation=_ref.userLocation,basic=_ref.basic;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),apiData=_useState2[0],setApiData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),userWethInput=_useState4[0],setUserWethInput=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userEthInput=_useState6[0],setUserEthInput=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),wethContract=_useState8[0],setWethContract=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),wethBalance=_useState10[0],setAvailableWethBalance=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),metamaskAddress=_useState12[0],setMetamaskAddress=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),showToast=_useState14[0],setShowToast=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),errorMsg=_useState16[0],setErrorMsg=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),chainId=_useState18[0],setChainId=_useState18[1];var _React$useContext=React.useContext(DataContext),userAccountAddress=_React$useContext.userAccountAddress,setUserAccountAddress=_React$useContext.setUserAccountAddress;useEffect(function(){if(window.ethereum){window.ethereum.on(\"chainChanged\",function(){window.location.reload();});window.ethereum.on(\"accountsChanged\",function(){window.location.reload();});}var loadBlockchainData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var web3,chainId,wethContract,availableWeth;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:web3=new Web3(Web3.givenProvider||\"http://localhost:8545\");//const network = await web3.eth.net.getNetworkType();\n//await window.ethereum.enable();\n//const addressFromMetamask = await web3.eth.getAccounts();\n_context.next=3;return web3.eth.getChainId();case 3:chainId=_context.sent;setMetamaskAddress(userAccountAddress[0]);setChainId(chainId);console.log(\"Network: \",CHAIN_IDS_TO_NAMES[chainId]);console.log(\"Chain ID: \",chainId);console.log(\"Contract Address: \",CONTRACT_ADDRESS[chainId]);//Load the smart contract\nwethContract=new web3.eth.Contract(ABI,CONTRACT_ADDRESS[chainId]);setWethContract(wethContract);if(!metamaskAddress){_context.next=17;break;}_context.next=14;return wethContract.methods.balanceOf(metamaskAddress).call();case 14:availableWeth=_context.sent;setAvailableWethBalance(availableWeth);console.log(availableWeth,\"avail Weth:\");case 17:case\"end\":return _context.stop();}}},_callee);}));return function loadBlockchainData(){return _ref2.apply(this,arguments);};}();loadBlockchainData();},[userAccountAddress[0]]);var renderInputBox=function renderInputBox(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:150,marginTop:50},children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",class:\"form-control\",min:\"0\",placeholder:\"Enter ETH amount\",\"data-name\":\"eth\",value:userEthInput,onChange:function onChange(e){return setUserEthInput(e.target.value);},style:{width:\"50%\",float:\"left\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return onWrapClick();},type:\"button\",class:\"btn btn-light\",style:{float:\"left\"},children:\"Wrap\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",class:\"form-control\",min:\"0\",placeholder:\"Enter WETH amount\",value:userWethInput,\"data-name\":\"weth\",onChange:function onChange(e){return setUserWethInput(e.target.value);},style:{width:\"50%\",float:\"left\"}}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",class:\"btn btn-light\",onClick:function onClick(){return onUnwrapClick();},style:{float:\"left\"},children:\"Unwrap\"})]});};var onWrapClick=function onWrapClick(){console.log(\"wrapping...\",userEthInput,\"ETH\");return onActivityClick(\"wrap\");};var onUnwrapClick=function onUnwrapClick(){console.log(\"unwrapping...\",userWethInput,\"WETH\");onActivityClick(\"unwrap\");};var onActivityClick=function onActivityClick(activity){try{if(metamaskAddress){var web3js=new Web3(window.ethereum);var input=activity=='wrap'?userEthInput:userWethInput;var userInputInWei=web3js.utils.toWei(input,'ether');var params=setParams(activity,userInputInWei);if(userInputInWei>=1){web3js.eth.sendTransaction(params);}}}catch(err){setShowToast(true);setErrorMsg(\"Something went wrong, please try again or report this issue\");console.log(err,\"2Generic Error TODO: Popup, \");}};var setParams=function setParams(activity,userInputInWei){var params={to:CONTRACT_ADDRESS[chainId],from:metamaskAddress};switch(activity){case\"wrap\":{params[\"data\"]=wethContract.methods.deposit().encodeABI();params[\"value\"]=userInputInWei;}break;case\"unwrap\":{params[\"data\"]=wethContract.methods.withdraw(userInputInWei).encodeABI();}break;}console.log(params);return params;};return/*#__PURE__*/_jsxs(\"div\",{class:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"col-5\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Wrap here \"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Your total weth available: \",wethBalance]}),renderInputBox()]}),/*#__PURE__*/_jsx(\"div\",{class:\"col-6\",children:/*#__PURE__*/_jsx(\"img\",{src:EthLogo,style:{width:\"40%\"}})}),/*#__PURE__*/_jsx(\"div\",{class:\"col\"})]}),showToast?/*#__PURE__*/_jsx(ErrorModal,{showToastFromProp:showToast,onClose:function onClose(){return setShowToast(false);},errorMsg:errorMsg}):null]});}","map":{"version":3,"sources":["/home/johanna/Desktop/weth-frontend/src/pages/Wrap.js"],"names":["React","Component","useEffect","useState","Web3","ABI","ErrorModal","act","CHAIN_INFO","CONTRACT_ADDRESS","SUPPORTED_CHAIN_IDS","CHAIN_IDS_TO_NAMES","DataContext","Wrap","degree","userLocation","basic","apiData","setApiData","userWethInput","setUserWethInput","userEthInput","setUserEthInput","wethContract","setWethContract","wethBalance","setAvailableWethBalance","metamaskAddress","setMetamaskAddress","showToast","setShowToast","errorMsg","setErrorMsg","chainId","setChainId","useContext","userAccountAddress","setUserAccountAddress","window","ethereum","on","location","reload","loadBlockchainData","web3","givenProvider","eth","getChainId","console","log","Contract","methods","balanceOf","call","availableWeth","renderInputBox","marginBottom","marginTop","e","target","value","width","float","onWrapClick","onUnwrapClick","onActivityClick","activity","web3js","input","userInputInWei","utils","toWei","params","setParams","sendTransaction","err","to","from","deposit","encodeABI","withdraw","EthLogo"],"mappings":"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","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { ABI } from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\nimport { CHAIN_INFO, CONTRACT_ADDRESS } from \"../constants/chainInfo\";\nimport { SUPPORTED_CHAIN_IDS, CHAIN_IDS_TO_NAMES } from \"../constants/chains\";\nimport {DataContext} from '../DataContext';\n\n\n//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nexport default function Wrap({ degree, userLocation, basic }) {\n  const [apiData, setApiData] = useState([]);\n  const [userWethInput, setUserWethInput] = useState(null);\n  const [userEthInput, setUserEthInput] = useState(null);\n  const [wethContract, setWethContract] = useState(null);\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [metamaskAddress, setMetamaskAddress] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n  const [chainId, setChainId] = useState(null);\n  const {userAccountAddress, setUserAccountAddress} = React.useContext(DataContext);\n\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n      const chainId = await web3.eth.getChainId();\n\n      setMetamaskAddress(userAccountAddress[0]);\n      setChainId(chainId);\n      console.log(\"Network: \", CHAIN_IDS_TO_NAMES[chainId]);\n      console.log(\"Chain ID: \", chainId);\n      console.log(\"Contract Address: \", CONTRACT_ADDRESS[chainId]); \n\n      //Load the smart contract\n      const wethContract = new web3.eth.Contract(\n        ABI,\n        CONTRACT_ADDRESS[chainId]\n      );\n      setWethContract(wethContract);\n\n      if (metamaskAddress) {\n        let availableWeth = await wethContract.methods\n          .balanceOf(metamaskAddress)\n          .call();\n        setAvailableWethBalance(availableWeth);\n        console.log(availableWeth, \"avail Weth:\");\n      }\n    };\n    loadBlockchainData();\n  }, [userAccountAddress[0]]);\n\n  const renderInputBox = () => {\n    return (\n      <>\n        <div style={{ marginBottom: 150, marginTop: 50 }}>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            min=\"0\"\n            placeholder=\"Enter ETH amount\"\n            data-name=\"eth\"\n            value={userEthInput}\n            onChange={(e) => setUserEthInput(e.target.value)}\n            style={{ width: \"50%\", float: \"left\" }}\n          ></input>\n          <button\n            onClick={() => onWrapClick()}\n            type=\"button\"\n            class=\"btn btn-light\"\n            style={{ float: \"left\" }}\n          >\n            Wrap\n          </button>\n        </div>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          min=\"0\"\n          placeholder=\"Enter WETH amount\"\n          value={userWethInput}\n          data-name=\"weth\"\n          onChange={(e) => setUserWethInput(e.target.value)}\n          style={{ width: \"50%\", float: \"left\" }}\n        ></input>\n        <button\n          type=\"button\"\n          class=\"btn btn-light\"\n          onClick={() => onUnwrapClick()}\n          style={{ float: \"left\" }}\n        >\n          Unwrap\n        </button>\n      </>\n    );\n  };\n\n  const onWrapClick = () => {\n    console.log(\"wrapping...\", userEthInput, \"ETH\");\n    return onActivityClick(\"wrap\");\n  };\n\n  const onUnwrapClick = () => {\n    console.log(\"unwrapping...\", userWethInput, \"WETH\");\n    onActivityClick(\"unwrap\");\n  };\n\n  const onActivityClick = (activity) => {\n    try {\n      if (metamaskAddress) {\n        let web3js = new Web3(window.ethereum);\n        let input = activity == 'wrap' ? userEthInput : userWethInput\n        let userInputInWei = web3js.utils.toWei(input, 'ether');\n        let params = setParams(activity, userInputInWei);\n        if (userInputInWei >= 1) {\n          web3js.eth.sendTransaction(params);\n        }\n      }\n    } catch (err) {\n      setShowToast(true);\n      setErrorMsg(\n        \"Something went wrong, please try again or report this issue\"\n      );\n      console.log(err, \"2Generic Error TODO: Popup, \");\n    }\n  };\n\n  const setParams = (activity, userInputInWei) => {\n    let params = {\n      to: CONTRACT_ADDRESS[chainId],\n      from: metamaskAddress,\n    };\n    switch (activity) {\n      case \"wrap\":\n        {\n          params[\"data\"] = wethContract.methods.deposit().encodeABI();\n          params[\"value\"] = userInputInWei;\n        }\n        break;\n      case \"unwrap\":\n        {\n          params[\"data\"] = wethContract.methods\n            .withdraw(userInputInWei)\n            .encodeABI();\n        }\n        break;\n    }\n    console.log(params);\n    return params;\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-5\">\n          <h1>\n            <br></br>\n            <b>Wrap here </b>\n          </h1>\n          <div>Your total weth available: {wethBalance}</div>\n\n          {renderInputBox()}\n        </div>\n        <div class=\"col-6\">\n          <img src={EthLogo} style={{ width: \"40%\" }} />\n        </div>\n        <div class=\"col\"></div>\n      </div>\n      {showToast ? (\n        <ErrorModal\n          showToastFromProp={showToast}\n          onClose={() => setShowToast(false)}\n          errorMsg={errorMsg}\n        ></ErrorModal>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}