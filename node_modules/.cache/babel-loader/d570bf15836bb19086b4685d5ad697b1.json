{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/weth-frontend/src/pages/Wrap.js\",\n    _s = $RefreshSig$();\n\nimport EthLogo from \"../eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\"; //TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Wrap(_ref) {\n  _s();\n\n  let {\n    degree,\n    userLocation,\n    basic\n  } = _ref;\n  const [apiData, setApiData] = useState([]);\n  const [userWethInput, setUserWethInput] = useState(null);\n  const [userEthInput, setUserEthInput] = useState(null);\n  const [wethContract, setWethContract] = useState(null);\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [metamaskAddress, setMetamaskAddress] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      const network = await web3.eth.net.getNetworkType();\n      await window.ethereum.enable();\n      const addresFromMetamask = await web3.eth.getAccounts();\n      setMetamaskAddress(addresFromMetamask[0]);\n      console.log(metamaskAddress, \"addddddddr\"); //Load the smart contract\n\n      const wethContract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setWethContract(wethContract);\n\n      if (metamaskAddress) {\n        let availableWeth = await wethContract.methods.balanceOf(metamaskAddress).call();\n        setAvailableWethBalance(availableWeth);\n        console.log(availableWeth, \"avail Weth:\");\n      } //Withdraw() (Unwrap eth function)\n      //Deposit() (wrap eth function)\n      //Balance() 'weth balance connected:'\n\n    };\n\n    loadBlockchainData();\n  }, [metamaskAddress]);\n\n  const renderInputBox = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 150,\n          marginTop: 50\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          class: \"form-control\",\n          placeholder: \"Enter ETH amount\",\n          \"data-name\": \"eth\",\n          value: userEthInput,\n          onChange: e => setUserEthInput(e.target.value),\n          style: {\n            width: \"50%\",\n            float: \"left\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onWrapClick(),\n          type: \"button\",\n          class: \"btn btn-light\",\n          style: {\n            float: \"left\"\n          },\n          children: \"Wrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        class: \"form-control\",\n        placeholder: \"Enter WETH amount\",\n        value: userWethInput,\n        \"data-name\": \"weth\",\n        onChange: e => setUserWethInput(e.target.value),\n        style: {\n          width: \"50%\",\n          float: \"left\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-light\",\n        onClick: () => onUnwrapClick(),\n        style: {\n          float: \"left\"\n        },\n        children: \"Unwrap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const onWrapClick = () => {\n    console.log(\"ETH -> WETH: ETH =\", userEthInput);\n\n    try {\n      if (metamaskAddress) {\n        let userInputInWei = userEthInput * 10 ** 18;\n\n        if (userInputInWei >= 1) {\n          console.log(userInputInWei, \"userInput In wEI\");\n          let web3js = new Web3(window.web3.currentProvider);\n          web3js.eth.sendTransaction({\n            to: CONTRACT_ADDRESS,\n            data: wethContract.methods.deposit().encodeABI(),\n            value: userInputInWei,\n            from: metamaskAddress\n          });\n        } else {\n          setShowToast(true);\n          console.log(\"Error TODO: Popup, you are trying to send less than 1 WEI\");\n        }\n      }\n    } catch (err) {\n      setShowToast(true);\n      console.log(\"Generic Error TODO: Popup, \");\n    }\n  };\n\n  const onUnwrapClick = () => {\n    console.log(\"WETH -> ETH: WETH =\", userWethInput);\n\n    try {\n      if (metamaskAddress) {\n        let userInputInWei = userEthInput * 10 ** 18;\n\n        if (userInputInWei >= 1) {\n          console.log(userInputInWei, \"userInput In wEI\");\n          let web3js = new Web3(window.web3.currentProvider);\n          web3js.eth.sendTransaction({\n            to: CONTRACT_ADDRESS,\n            data: wethContract.methods.withdraw(userInputInWei).encodeABI(),\n            from: metamaskAddress\n          });\n        } else {\n          setShowToast(true);\n          console.log(\"Error TODO: Popup, you are trying to send less than 1 WEI\");\n        }\n      }\n    } catch (err) {\n      setShowToast(true);\n      console.log(err, \"Generic Error TODO: Popup, \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Wrap here \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Your total weth available: \", wethBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), renderInputBox()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: EthLogo,\n          style: {\n            width: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), showToast ? /*#__PURE__*/_jsxDEV(ErrorModal, {\n      showToastFromProp: showToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wrap, \"PL1jYmdHQ6SI+WDNwcOCcrqk5M0=\");\n\n_c = Wrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrap\");","map":{"version":3,"sources":["/home/johanna/Desktop/weth-frontend/src/pages/Wrap.js"],"names":["React","Component","useEffect","useState","Web3","CONTRACT_ADDRESS","ABI","ErrorModal","Wrap","degree","userLocation","basic","apiData","setApiData","userWethInput","setUserWethInput","userEthInput","setUserEthInput","wethContract","setWethContract","wethBalance","setAvailableWethBalance","metamaskAddress","setMetamaskAddress","showToast","setShowToast","loadBlockchainData","web3","givenProvider","network","eth","net","getNetworkType","window","ethereum","enable","addresFromMetamask","getAccounts","console","log","Contract","availableWeth","methods","balanceOf","call","renderInputBox","marginBottom","marginTop","e","target","value","width","float","onWrapClick","onUnwrapClick","userInputInWei","web3js","currentProvider","sendTransaction","to","data","deposit","encodeABI","from","err","withdraw","EthLogo"],"mappings":"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","sourcesContent":["import EthLogo from \"../eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { CONTRACT_ADDRESS, ABI } from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\";\n\n//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nexport default function Wrap({ degree, userLocation, basic }) {\n  const [apiData, setApiData] = useState([]);\n  const [userWethInput, setUserWethInput] = useState(null);\n  const [userEthInput, setUserEthInput] = useState(null);\n  const [wethContract, setWethContract] = useState(null);\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [metamaskAddress, setMetamaskAddress] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      const network = await web3.eth.net.getNetworkType();\n      await window.ethereum.enable();\n      const addresFromMetamask = await web3.eth.getAccounts();\n\n      setMetamaskAddress(addresFromMetamask[0]);\n      console.log(metamaskAddress, \"addddddddr\");\n\n      //Load the smart contract\n      const wethContract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      setWethContract(wethContract);\n\n      if (metamaskAddress) {\n        let availableWeth = await wethContract.methods\n          .balanceOf(metamaskAddress)\n          .call();\n        setAvailableWethBalance(availableWeth);\n        console.log(availableWeth, \"avail Weth:\");\n      }\n\n      //Withdraw() (Unwrap eth function)\n      //Deposit() (wrap eth function)\n      //Balance() 'weth balance connected:'\n    };\n    loadBlockchainData();\n  }, [metamaskAddress]);\n\n  const renderInputBox = () => {\n    return (\n      <>\n        <div style={{ marginBottom: 150, marginTop: 50 }}>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            placeholder=\"Enter ETH amount\"\n            data-name=\"eth\"\n            value={userEthInput}\n            onChange={(e) => setUserEthInput(e.target.value)}\n            style={{ width: \"50%\", float: \"left\" }}\n          ></input>\n          <button\n            onClick={() => onWrapClick()}\n            type=\"button\"\n            class=\"btn btn-light\"\n            style={{ float: \"left\" }}\n          >\n            Wrap\n          </button>\n        </div>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          placeholder=\"Enter WETH amount\"\n          value={userWethInput}\n          data-name=\"weth\"\n          onChange={(e) => setUserWethInput(e.target.value)}\n          style={{ width: \"50%\", float: \"left\" }}\n        ></input>\n        <button\n          type=\"button\"\n          class=\"btn btn-light\"\n          onClick={() => onUnwrapClick()}\n          style={{ float: \"left\" }}\n        >\n          Unwrap\n        </button>\n      </>\n    );\n  };\n\n  const onWrapClick = () => {\n    console.log(\"ETH -> WETH: ETH =\", userEthInput);\n\n    try {\n      if (metamaskAddress) {\n        let userInputInWei = userEthInput * (10 ** 18);\n        if (userInputInWei >= 1) {\n          console.log(userInputInWei, \"userInput In wEI\");\n          let web3js = new Web3(window.web3.currentProvider);\n          web3js.eth.sendTransaction({\n            to: CONTRACT_ADDRESS,\n            data: wethContract.methods.deposit().encodeABI(),\n            value: userInputInWei,\n            from: metamaskAddress,\n          });\n        } else {\n          setShowToast(true);\n\n          console.log(\n            \"Error TODO: Popup, you are trying to send less than 1 WEI\"\n          );\n        }\n      }\n    } catch (err) {\n      setShowToast(true);\n\n      console.log(\"Generic Error TODO: Popup, \");\n    }\n  };\n\n  const onUnwrapClick = () => {\n    console.log(\"WETH -> ETH: WETH =\", userWethInput);\n    try {\n      if (metamaskAddress) {\n        let userInputInWei = userEthInput * (10 ** 18);\n        if (userInputInWei >= 1) {\n          console.log(userInputInWei, \"userInput In wEI\");\n          let web3js = new Web3(window.web3.currentProvider);\n          web3js.eth.sendTransaction({\n            to: CONTRACT_ADDRESS,\n            data: wethContract.methods.withdraw(userInputInWei).encodeABI(),\n            from: metamaskAddress,\n          });\n        } else {\n          setShowToast(true);\n\n          console.log(\n            \"Error TODO: Popup, you are trying to send less than 1 WEI\"\n          );\n        }\n      }\n    } catch (err) {\n      setShowToast(true);\n\n      console.log(err, \"Generic Error TODO: Popup, \");\n    }\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-5\">\n          <h1>\n            <br></br>\n            <b>Wrap here </b>\n          </h1>\n          <div>Your total weth available: {wethBalance}</div>\n\n          {renderInputBox()}\n        </div>\n        <div class=\"col-6\">\n          <img src={EthLogo} style={{ width: \"40%\" }} />\n        </div>\n        <div class=\"col\"></div>\n      </div>\n      {showToast ? (\n        <ErrorModal showToastFromProp={showToast}></ErrorModal>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}