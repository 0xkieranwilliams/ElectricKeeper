{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/ElectricalEthereum/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Routes } from \"react-router-dom\";\nimport { DataContext } from \"./DataContext\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { isMobile } from \"react-device-detect\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport Buy from \"./pages/Buy\";\nimport About from \"./pages/About\";\nimport MobileDetected from \"./pages/MobileDetected\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const [userAccountAddress, setUserAccountAddress] = useState(\"\");\n  const [connectedAddrValue, setConnectedAddrValue] = useState(\"\");\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate,\n    web3\n  } = useWeb3React();\n  const injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42]\n  });\n\n  const handleConnect = () => {\n    try {\n      web3.activate(injected, undefined, true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleConnectMetamask = async () => {\n    let that = this;\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable(); //Fetch account data:\n\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    console.log(accountFromMetaMask, \"account in app.js before set state\");\n    setUserAccountAddress(accountFromMetaMask);\n    setConnectedAddrValue(String(accountFromMetaMask).substr(0, 5) + \"...\" + String(accountFromMetaMask).substr(38, 4));\n    console.log(userAccountAddress, \"user metamask address after set state\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      userAccountAddress: userAccountAddress\n    },\n    children: [isMobile ? \"\" : /*#__PURE__*/_jsxDEV(Navbar, {\n      handleConnectMetamask: handleConnectMetamask,\n      connectedAddrValue: connectedAddrValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: isMobile ? /*#__PURE__*/_jsxDEV(MobileDetected, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/buy\",\n          element: /*#__PURE__*/_jsxDEV(Buy, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/error\",\n          element: /*#__PURE__*/_jsxDEV(MobileDetected, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Status: \", web3.active ? \"ðŸŸ¢\" : web3.error ? \"ðŸ”´\" : \"ðŸŸ \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(web3, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VGTeQ7YPq7kjs55ZkS3+T8idyBg=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/App.js"],"names":["Route","Routes","DataContext","Web3ReactProvider","useWeb3React","InjectedConnector","Web3Provider","isMobile","React","Component","useEffect","useState","Home","Buy","About","MobileDetected","Navbar","Footer","MyContext","createContext","App","userAccountAddress","setUserAccountAddress","connectedAddrValue","setConnectedAddrValue","active","account","library","connector","activate","deactivate","web3","injected","supportedChainIds","handleConnect","undefined","error","console","handleConnectMetamask","that","Web3","givenProvider","network","eth","net","getNetworkType","window","ethereum","enable","accountFromMetaMask","getAccounts","log","String","substr","JSON","stringify"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,kBAAhD;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,SAAS,gBAAGV,KAAK,CAACW,aAAN,EAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8Cb,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA,UAAjD;AAA6DC,IAAAA;AAA7D,MACJ3B,YAAY,EADd;AAGE,QAAM4B,QAAQ,GAAG,IAAI3B,iBAAJ,CAAsB;AACrC4B,IAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb;AADkB,GAAtB,CAAjB;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAI;AACFH,MAAAA,IAAI,CAACF,QAAL,CAAcG,QAAd,EAAwBG,SAAxB,EAAmC,IAAnC;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAND;;AAOF,QAAME,qBAAqB,GAAG,YAAY;AACxC,QAAIC,IAAI,GAAG,IAAX;AACA,UAAMR,IAAI,GAAG,IAAIS,IAAJ,CAASA,IAAI,CAACC,aAAL,IAAsB,uBAA/B,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACY,GAAL,CAASC,GAAT,CAAaC,cAAb,EAAtB;AACA,UAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN,CAJwC,CAKxC;;AACA,UAAMC,mBAAmB,GAAG,MAAMlB,IAAI,CAACY,GAAL,CAASO,WAAT,EAAlC;AACAb,IAAAA,OAAO,CAACc,GAAR,CAAYF,mBAAZ,EAAiC,oCAAjC;AACA3B,IAAAA,qBAAqB,CAAC2B,mBAAD,CAArB;AACAzB,IAAAA,qBAAqB,CACnB4B,MAAM,CAACH,mBAAD,CAAN,CAA4BI,MAA5B,CAAmC,CAAnC,EAAsC,CAAtC,IACE,KADF,GAEED,MAAM,CAACH,mBAAD,CAAN,CAA4BI,MAA5B,CAAmC,EAAnC,EAAuC,CAAvC,CAHiB,CAArB;AAMAhB,IAAAA,OAAO,CAACc,GAAR,CAAY9B,kBAAZ,EAAgC,uCAAhC;AACD,GAhBD;;AAkBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,kBAAkB,EAAEA;AAAtB,KAA7B;AAAA,eACGd,QAAQ,GACP,EADO,gBAGP,QAAC,MAAD;AACE,MAAA,qBAAqB,EAAE+B,qBADzB;AAEE,MAAA,kBAAkB,EAAEf;AAFtB;AAAA;AAAA;AAAA;AAAA,YAJJ,eASE;AAAA,gBACGhB,QAAQ,gBACP,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YATF,eAsBE;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE2B,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,+BACE;AAAA,iCAAeH,IAAI,CAACN,MAAL,GAAc,IAAd,GAAqBM,IAAI,CAACK,KAAL,GAAa,IAAb,GAAoB,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA,eAKA;AAAA,kBAAMkB,IAAI,CAACC,SAAL,CAAexB,IAAf,EAAqB,IAArB,EAA2B,CAA3B;AAAN;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eA8BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAtEQX,G;UAKLhB,Y;;;KALKgB,G;AAwET,eAAeA,GAAf","sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport { DataContext } from \"./DataContext\";\n\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { isMobile } from \"react-device-detect\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport Buy from \"./pages/Buy\";\n\nimport About from \"./pages/About\";\nimport MobileDetected from \"./pages/MobileDetected\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nconst MyContext = React.createContext();\n\nfunction App() {\n  const [userAccountAddress, setUserAccountAddress] = useState(\"\");\n  const [connectedAddrValue, setConnectedAddrValue] = useState(\"\");\n\n  const { active, account, library, connector, activate, deactivate, web3 } =\n    useWeb3React();\n\n    const injected = new InjectedConnector({\n      supportedChainIds: [1, 3, 4, 5, 42],\n    });\n\n    const handleConnect = () => {\n      try {\n        web3.activate(injected, undefined, true);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  const handleConnectMetamask = async () => {\n    let that = this;\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable();\n    //Fetch account data:\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    console.log(accountFromMetaMask, \"account in app.js before set state\");\n    setUserAccountAddress(accountFromMetaMask);\n    setConnectedAddrValue(\n      String(accountFromMetaMask).substr(0, 5) +\n        \"...\" +\n        String(accountFromMetaMask).substr(38, 4)\n    );\n\n    console.log(userAccountAddress, \"user metamask address after set state\");\n  };\n\n  return (\n    <DataContext.Provider value={{ userAccountAddress: userAccountAddress }}>\n      {isMobile ? (\n        \"\"\n      ) : (\n        <Navbar\n          handleConnectMetamask={handleConnectMetamask}\n          connectedAddrValue={connectedAddrValue}\n        />\n      )}\n      <main>\n        {isMobile ? (\n          <MobileDetected />\n        ) : (\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/buy\" element={<Buy />} />\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/error\" element={<MobileDetected />} />\n          </Routes>\n        )}\n      </main>\n\n      <div>\n      <button onClick={handleConnect}>Connect</button>\n      <p>\n        <span>Status: {web3.active ? \"ðŸŸ¢\" : web3.error ? \"ðŸ”´\" : \"ðŸŸ \"}</span>\n      </p>\n      <pre>{JSON.stringify(web3, null, 2)}</pre>\n    </div>\n\n      <Footer />\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}