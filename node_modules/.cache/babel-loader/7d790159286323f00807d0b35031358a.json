{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/weth-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Routes } from \"react-router-dom\";\nimport { DataContext } from './DataContext';\nimport { HashRouter } from \"react-router-dom\";\nimport { isMobile } from \"react-device-detect\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport HomeWrap from \"./pages/HomeWrap\";\nimport Wrap from \"./pages/Wrap\";\nimport About from \"./pages/About\";\nimport MobileDetected from \"./pages/MobileDetected\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const [userAccountAddress, setUserAccountAddress] = useState(\"\");\n  const [connectedAddrValue, setConnectedAddrValue] = useState(\"\");\n\n  const handleConnectMetamask = async () => {\n    let that = this;\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable(); //Fetch account data:\n\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    console.log(accountFromMetaMask, \"account in app.js before set state\");\n    setUserAccountAddress(accountFromMetaMask);\n    setConnectedAddrValue(String(accountFromMetaMask).substr(0, 5) + \"...\" + String(accountFromMetaMask).substr(38, 4));\n    console.log(userAccountAddress, \"user metamask address after set state\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      userAccountAddress: userAccountAddress\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: [isMobile ? \"\" : /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: isMobile ? /*#__PURE__*/_jsxDEV(MobileDetected, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(HashRouter, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(HomeWrap, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/wrap\",\n              element: /*#__PURE__*/_jsxDEV(Wrap, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/about\",\n              element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/error\",\n              element: /*#__PURE__*/_jsxDEV(MobileDetected, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metamask-addr-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light mm\",\n          onClick: handleConnectMetamask,\n          children: [connectedAddrValue, /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"30\",\n            height: \"30\",\n            style: {\n              float: \"left\",\n              marginRight: 5\n            },\n            src: \"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ugt8qq273zVwsDmLrmtckM5qI3s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/johanna/Desktop/weth-frontend/src/App.js"],"names":["Route","Routes","DataContext","HashRouter","isMobile","React","Component","useEffect","useState","Web3","HomeWrap","Wrap","About","MobileDetected","Navbar","Footer","MyContext","createContext","App","userAccountAddress","setUserAccountAddress","connectedAddrValue","setConnectedAddrValue","handleConnectMetamask","that","web3","givenProvider","network","eth","net","getNetworkType","window","ethereum","enable","accountFromMetaMask","getAccounts","console","log","String","substr","float","marginRight"],"mappings":"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","sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport {DataContext} from './DataContext';\nimport { HashRouter } from \"react-router-dom\";\n\n\n\nimport { isMobile } from \"react-device-detect\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport HomeWrap from \"./pages/HomeWrap\";\nimport Wrap from \"./pages/Wrap\";\n\nimport About from \"./pages/About\";\nimport MobileDetected from \"./pages/MobileDetected\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nconst MyContext = React.createContext();\n\n\nfunction App() {\n  const [userAccountAddress, setUserAccountAddress] = useState(\"\");\n  const [connectedAddrValue, setConnectedAddrValue] = useState(\"\");\n\n  const handleConnectMetamask = async () => {\n    let that = this;\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable();\n    //Fetch account data:\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    console.log(accountFromMetaMask, \"account in app.js before set state\");\n    setUserAccountAddress(accountFromMetaMask);\n    setConnectedAddrValue(\n      String(accountFromMetaMask).substr(0, 5) +\n        \"...\" +\n        String(accountFromMetaMask).substr(38, 4)\n    );\n\n    console.log(userAccountAddress, \"user metamask address after set state\");\n  };\n\n  return (\n    <DataContext.Provider\n    value={{userAccountAddress: userAccountAddress}}>\n    <div className=\"body-container\">\n      {isMobile ? \"\" : <Navbar />}\n      <main >\n        {isMobile ? (\n          <MobileDetected />\n        ) : (\n          <Routes>\n            <HashRouter>\n            <Route path=\"/\" element={<HomeWrap />} />\n            <Route path=\"/wrap\" element={<Wrap />} />\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/error\" element={<MobileDetected />} />\n            </HashRouter>\n          </Routes>\n        )}\n      </main>\n      <div className=\"metamask-addr-container\">\n        <button className=\"btn btn-light mm\" onClick={handleConnectMetamask}>\n         {connectedAddrValue}\n          <img\n            width=\"30\"\n            height=\"30\"\n            style={{  float: \"left\", marginRight: 5}}\n            src=\"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"\n          ></img>\n        </button>\n     \n      </div>\n\n      <Footer />\n    </div>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}