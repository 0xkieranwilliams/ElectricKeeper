{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/weth-frontend/src/components/ErrorModal.js\",\n    _s = $RefreshSig$();\n\nimport { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ErrorModal(_ref) {\n  _s();\n\n  let {\n    showToastFromProp\n  } = _ref;\n  const [showToast, setShowToast] = useState(false);\n\n  const _closeToast = () => {\n    setShowToast(false);\n  };\n\n  const _openToast = () => {};\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowToast(true);\n      }\n    };\n\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const _renderInviteToast = () => {\n    console.log(showToast, \"showtoast t or f?\");\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showToast,\n      onHide: _closeToast,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inv-toast-body\",\n          children: \"You have to connect to Metamask before doing this!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", _renderInviteToast()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ErrorModal, \"TZVJirZWDzIwdkj/66Nzmm4wQdM=\");\n\n_c = ErrorModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorModal\");","map":{"version":3,"sources":["/home/johanna/Desktop/weth-frontend/src/components/ErrorModal.js"],"names":["Modal","React","Component","useEffect","useState","ErrorModal","showToastFromProp","showToast","setShowToast","_closeToast","_openToast","updateStateIfPropChanges","_renderInviteToast","console","log"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;AAEA,eAAe,SAASC,UAAT,OAA2C;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AACxD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,wBAAwB,GAAG,YAAY;AAC3C,UAAIL,iBAAJ,EAAuB;AACrBE,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KAJD;;AAKAG,IAAAA,wBAAwB;AACzB,GAPQ,EAON,CAACL,iBAAD,CAPM,CAAT;;AASA,QAAMM,kBAAkB,GAAG,MAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAAuB,mBAAvB;AACA,wBACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEA,SADR;AAEE,MAAA,MAAM,EAAEE,WAFV;AAGE,yBAAgB,+BAHlB;AAIE,MAAA,QAAQ,MAJV;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAjBD;;AAkBA,sBAAO;AAAA,oBAAOG,kBAAkB,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCuBP,U;;KAAAA,U","sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\n\nexport default function ErrorModal({ showToastFromProp }) {\n  const [showToast, setShowToast] = useState(false);\n\n  const _closeToast = () => {\n    setShowToast(false);\n  };\n\n  const _openToast = () => {};\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowToast(true);\n      }\n    };\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const _renderInviteToast = () => {\n    console.log(showToast, \"showtoast t or f?\");\n    return (\n      <Modal\n        show={showToast}\n        onHide={_closeToast}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>Warning</Modal.Header>\n        <Modal.Body>\n          <div className=\"inv-toast-body\">\n            You have to connect to Metamask before doing this!\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n  return <div> {_renderInviteToast()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}