{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Buy.js\",\n    _s = $RefreshSig$();\n\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, CONTRACT_ADDRESS, ELECTRICKEEPER_ABI, ELECTRICKEEPER_CONTRACT_ADDRESS } from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { DataContext } from \"../DataContext\"; //TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Buy(_ref) {\n  _s();\n\n  let {\n    degree,\n    userLocation,\n    basic\n  } = _ref;\n  const [maticPriceFeedContract, setMaticPriceFeedContract] = useState(null);\n  const [electricKeeperContract, setElectricKeeperContract] = useState(null);\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [metamaskAddress, setMetamaskAddress] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [latestPriceOfMatic_1p, setLatestPriceOfMatic_1p] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n  const {\n    userAccountAddress,\n    setUserAccountAddress\n  } = React.useContext(DataContext);\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\"); //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n\n      const chainId = await web3.eth.getChainId();\n      setMetamaskAddress(account);\n      console.log(account, 'account in BUY'); //Load the smart contract\n\n      const maticPriceFeedContract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      const electricKeeperContract = new web3.eth.Contract(ELECTRICKEEPER_ABI, ELECTRICKEEPER_CONTRACT_ADDRESS);\n      setElectricKeeperContract(electricKeeperContract);\n      setMaticPriceFeedContract(maticPriceFeedContract);\n      console.log(maticPriceFeedContract, \"This is the matic price feed contract\");\n      console.log(electricKeeperContract, \"This is electric keeper contract\");\n\n      if (maticPriceFeedContract !== null) {\n        maticPriceFeedContract.methods.getLatestPrice().call().then(data => {\n          setLatestPriceOfMatic_1p(web3.utils.fromWei(data));\n          console.log(data);\n          console.log(web3.utils.fromWei(data));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    loadBlockchainData();\n  }, [userAccountAddress[0]]);\n  useEffect(() => {\n    console.log(\"matic Price Feed contract: \", maticPriceFeedContract);\n  }, []);\n\n  const estimatedMatic = () => {\n    return latestPriceOfMatic_1p && inputAmount !== \"\" ? latestPriceOfMatic_1p * (100 * inputAmount) : 0;\n  };\n\n  const handleBuyButtonClick = colorNumber => {\n    console.log(\"You chose the color:\", colorNumber);\n    console.log(account, 'account in BUY handle click');\n\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n      web3.eth.sendTransaction({\n        to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n        data: electricKeeperContract.methods.BuyElectricityTimeOn(colorNumber, inputAmount).encodeABI(),\n        value: web3.utils.toWei(inputAmount),\n        from: userAccountAddress\n      });\n    } catch (err) {\n      console.log(err, \"ERROR !! You have to connect to metamask!\");\n    }\n  };\n\n  const renderInputBox = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 150,\n          marginTop: 50,\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"50%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              alignSelf: \"start\",\n              color: \"#ffdd9a\",\n              marginRight: \"20px\"\n            },\n            htmlFor: \"minutes\",\n            children: \"1 minute = 1 USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            class: \"input-matic\",\n            min: \"0\",\n            placeholder: \"enter amount of minutes\",\n            \"data-name\": \"minutes\",\n            value: inputAmount,\n            onChange: e => setInputAmount(e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"pick LED color to buy \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"80%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn-hover color-blue\",\n            onClick: () => handleBuyButtonClick(0),\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn-hover color-green\",\n            onClick: () => handleBuyButtonClick(1),\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn-hover color-yellow\",\n            onClick: () => handleBuyButtonClick(2),\n            children: \"Yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn-hover color-red\",\n            onClick: () => handleBuyButtonClick(3),\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Amount: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), \" \\xA0\\xA0\\xA0\\xA0 \\u2248 \\xA0\", \" \", estimatedMatic().toFixed(3), \" matic\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), \"Buy electricity\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter the amount of minutes of electricity you want to buy \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: renderInputBox()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), showToast ? /*#__PURE__*/_jsxDEV(ErrorModal, {\n      showToastFromProp: showToast,\n      onClose: () => setShowToast(false),\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Buy, \"yKTSeksI+om/8uMwWFTLpuD+/g4=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Buy.js"],"names":["React","Component","useEffect","useState","Web3","ABI","CONTRACT_ADDRESS","ELECTRICKEEPER_ABI","ELECTRICKEEPER_CONTRACT_ADDRESS","ErrorModal","Web3ReactProvider","useWeb3React","DataContext","Buy","degree","userLocation","basic","maticPriceFeedContract","setMaticPriceFeedContract","electricKeeperContract","setElectricKeeperContract","wethBalance","setAvailableWethBalance","metamaskAddress","setMetamaskAddress","inputAmount","setInputAmount","latestPriceOfMatic_1p","setLatestPriceOfMatic_1p","showToast","setShowToast","errorMsg","setErrorMsg","userAccountAddress","setUserAccountAddress","useContext","account","window","ethereum","on","location","reload","loadBlockchainData","web3","givenProvider","chainId","eth","getChainId","console","log","Contract","methods","getLatestPrice","call","then","data","utils","fromWei","catch","err","estimatedMatic","handleBuyButtonClick","colorNumber","currentProvider","sendTransaction","to","BuyElectricityTimeOn","encodeABI","value","toWei","from","renderInputBox","marginBottom","marginTop","display","alignItems","flexDirection","width","alignSelf","color","marginRight","e","target","toFixed"],"mappings":"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","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport {\n  ABI,\n  CONTRACT_ADDRESS,\n  ELECTRICKEEPER_ABI,\n  ELECTRICKEEPER_CONTRACT_ADDRESS,\n} from \"../config\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\n\nimport { DataContext } from \"../DataContext\";\n\n//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nexport default function Buy({ degree, userLocation, basic }) {\n  const [maticPriceFeedContract, setMaticPriceFeedContract] = useState(null);\n  const [electricKeeperContract, setElectricKeeperContract] = useState(null);\n\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [metamaskAddress, setMetamaskAddress] = useState(\"\");\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [latestPriceOfMatic_1p, setLatestPriceOfMatic_1p] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n  const { userAccountAddress, setUserAccountAddress } =\n    React.useContext(DataContext);\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n      const chainId = await web3.eth.getChainId();\n\n\n      setMetamaskAddress(account);\n      console.log(account, 'account in BUY')\n\n      //Load the smart contract\n      const maticPriceFeedContract = new web3.eth.Contract(\n        ABI,\n        CONTRACT_ADDRESS\n      );\n      const electricKeeperContract = new web3.eth.Contract(\n        ELECTRICKEEPER_ABI,\n        ELECTRICKEEPER_CONTRACT_ADDRESS\n      );\n      setElectricKeeperContract(electricKeeperContract);\n      setMaticPriceFeedContract(maticPriceFeedContract);\n      console.log(\n        maticPriceFeedContract,\n        \"This is the matic price feed contract\"\n      );\n      console.log(electricKeeperContract, \"This is electric keeper contract\");\n\n      if (maticPriceFeedContract !== null) {\n        maticPriceFeedContract.methods\n          .getLatestPrice()\n          .call()\n          .then((data) => {\n            setLatestPriceOfMatic_1p(web3.utils.fromWei(data));\n            console.log(data);\n            console.log(web3.utils.fromWei(data));\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    loadBlockchainData();\n  }, [userAccountAddress[0]]);\n\n  useEffect(() => {\n    console.log(\"matic Price Feed contract: \", maticPriceFeedContract);\n  }, []);\n\n  const estimatedMatic = () => {\n    return latestPriceOfMatic_1p && inputAmount !== \"\"\n      ? latestPriceOfMatic_1p * (100 * inputAmount)\n      : 0;\n  };\n\n  const handleBuyButtonClick = (colorNumber) => {\n    console.log(\"You chose the color:\", colorNumber);\n    console.log(account, 'account in BUY handle click')\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n      web3.eth.sendTransaction({\n        to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n        data: electricKeeperContract.methods\n          .BuyElectricityTimeOn(colorNumber, inputAmount)\n          .encodeABI(),\n        value: web3.utils.toWei(inputAmount),\n        from: userAccountAddress,\n      });\n    } catch (err) {\n      console.log(err, \"ERROR !! You have to connect to metamask!\");\n    }\n  };\n\n  const renderInputBox = () => {\n    return (\n      <>\n        <div\n          style={{\n            marginBottom: 150,\n            marginTop: 50,\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"50%\" }}\n          >\n            <label\n              style={{\n                alignSelf: \"start\",\n                color: \"#ffdd9a\",\n                marginRight: \"20px\",\n              }}\n              htmlFor=\"minutes\"\n            >\n              1 minute = 1 USD\n            </label>\n            <input\n              type=\"number\"\n              class=\"input-matic\"\n              min=\"0\"\n              placeholder=\"enter amount of minutes\"\n              data-name=\"minutes\"\n              value={inputAmount}\n              onChange={(e) => setInputAmount(e.target.value)}\n              style={{ width: \"100%\" }}\n            ></input>\n          </div>\n\n          <br />\n          <p>pick LED color to buy </p>\n          <div style={{ width: \"80%\" }}>\n            <button\n              class=\"btn-hover color-blue\"\n              onClick={() => handleBuyButtonClick(0)}\n            >\n              Blue\n            </button>\n            <button\n              class=\"btn-hover color-green\"\n              onClick={() => handleBuyButtonClick(1)}\n            >\n              Green\n            </button>\n            <button\n              class=\"btn-hover color-yellow\"\n              onClick={() => handleBuyButtonClick(2)}\n            >\n              Yellow\n            </button>\n            <button\n              class=\"btn-hover color-red\"\n              onClick={() => handleBuyButtonClick(3)}\n            >\n              Red\n            </button>\n          </div>\n          <br />\n          <p>\n            <b>Amount: </b> &nbsp;&nbsp;&nbsp;&nbsp; ≈ &nbsp;{\" \"}\n            {estimatedMatic().toFixed(3)} matic\n          </p>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div>\n          <h1>\n            <br></br>\n            Buy electricity\n          </h1>\n          <p>enter the amount of minutes of electricity you want to buy </p>\n          <div className=\"row\">{renderInputBox()}</div>\n        </div>\n      </div>\n      {showToast ? (\n        <ErrorModal\n          showToastFromProp={showToast}\n          onClose={() => setShowToast(false)}\n          errorMsg={errorMsg}\n        ></ErrorModal>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}