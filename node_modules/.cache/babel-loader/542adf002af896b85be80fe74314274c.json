{"ast":null,"code":"import _regeneratorRuntime from\"/home/johanna/Desktop/ElectricalEthereum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/johanna/Desktop/ElectricalEthereum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/johanna/Desktop/ElectricalEthereum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Modal}from\"react-bootstrap\";import React,{Component,useEffect,useState}from\"react\";import\"./ConnectWalletModal.css\";import{Web3ReactProvider,useWeb3React}from\"@web3-react/core\";import{InjectedConnector}from\"@web3-react/injected-connector\";import{Web3Provider}from\"@ethersproject/providers\";import{injected,walletconnect,resetWalletConnector,walletlink}from\"./connectors\";import{DataContext}from\"../DataContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ConnectWalletModal(_ref){var showToastFromProp=_ref.showToastFromProp,errorMsg=_ref.errorMsg,onClose=_ref.onClose;var _useState=useState(),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];var _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account,library=_useWeb3React.library,connector=_useWeb3React.connector,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate,web3reactContext=_useWeb3React.web3reactContext;var web3=useWeb3React();var shortAddress=account?String(account).substr(0,5)+\"...\"+String(account).substr(38,4):\"\";var _closeModal=function _closeModal(){setShowModal(false);onClose();};var handleConnect=function handleConnect(){try{web3.activate(injected,undefined,true).catch(function(err){return window.location.reload();});}catch(error){console.error(error);}};var connectWalletConnectSimple=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;resetWalletConnector(walletconnect);_context.next=4;return activate(walletconnect);case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function connectWalletConnectSimple(){return _ref2.apply(this,arguments);};}();var connectCoinbaseSimple=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return web3.activate(walletlink);case 3:_context2.next=8;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 8:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return function connectCoinbaseSimple(){return _ref3.apply(this,arguments);};}();useEffect(function(){var updateStateIfPropChanges=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(showToastFromProp){setShowModal(true);}else if(!showToastFromProp){setShowModal(false);}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function updateStateIfPropChanges(){return _ref4.apply(this,arguments);};}();updateStateIfPropChanges();},[showToastFromProp]);var renderConnectWalletModal=function renderConnectWalletModal(){console.log(showModal,\"showtoast t or f?\");return/*#__PURE__*/_jsxs(Modal,{show:showToastFromProp,onHide:_closeModal,children:[/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"20px\",textAlign:\"center\"},children:/*#__PURE__*/_jsx(Modal.Title,{children:/*#__PURE__*/_jsx(\"p\",{children:\"connect a wallet\"})})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"short-address-modal\",children:[\" \",account?shortAddress:\" \"]}),/*#__PURE__*/_jsxs(\"button\",{class:\"btn-hover color-electric\",onClick:handleConnect,children:[/*#__PURE__*/_jsx(\"img\",{width:\"30\",height:\"30\",style:{marginRight:20},src:\"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"}),\"Connect Metamask Wallet\"]}),/*#__PURE__*/_jsx(\"pre\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{class:\"btn-hover color-electric\",onClick:connectCoinbaseSimple,children:[/*#__PURE__*/_jsx(\"img\",{width:\"30\",height:\"30\",style:{marginRight:20},src:\"https://cdn.freelogovectors.net/wp-content/uploads/2021/12/coinbase-logo-freelogovectors.net_.png \"}),\"Connect Coinbase Wallet\"]}),/*#__PURE__*/_jsx(\"pre\",{})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{class:\"btn-hover color-electric\",onClick:connectWalletConnectSimple,children:[/*#__PURE__*/_jsx(\"img\",{width:\"30\",height:\"30\",style:{marginRight:20},src:\"https://docs.walletconnect.com/img/walletconnect-logo.svg\"}),\"Connect walletconnect\"]}),/*#__PURE__*/_jsx(\"pre\",{})]})]})]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[\" \",renderConnectWalletModal()]});}","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/components/ConnectWalletModal.js"],"names":["Modal","React","Component","useEffect","useState","Web3ReactProvider","useWeb3React","InjectedConnector","Web3Provider","injected","walletconnect","resetWalletConnector","walletlink","DataContext","ConnectWalletModal","showToastFromProp","errorMsg","onClose","showModal","setShowModal","active","account","library","connector","activate","deactivate","web3reactContext","web3","shortAddress","String","substr","_closeModal","handleConnect","undefined","catch","err","window","location","reload","error","console","connectWalletConnectSimple","log","connectCoinbaseSimple","updateStateIfPropChanges","renderConnectWalletModal","marginTop","textAlign","marginRight"],"mappings":"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","sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport \"./ConnectWalletModal.css\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport {\n  injected,\n  walletconnect,\n  resetWalletConnector,\n  walletlink,\n} from \"./connectors\";\n\nimport {DataContext} from \"../DataContext\";\n\nexport default function ConnectWalletModal({\n  showToastFromProp,\n  errorMsg,\n  onClose,\n}) {\n  const [showModal, setShowModal] = useState();\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate,\n    web3reactContext,\n  } = useWeb3React();\n  const web3 = useWeb3React();\n  const shortAddress = account\n    ? String(account).substr(0, 5) + \"...\" + String(account).substr(38, 4)\n    : \"\";\n\n  const _closeModal = () => {\n    setShowModal(false);\n    onClose();\n  };\n\n  const handleConnect = () => {\n    try {\n      web3.activate(injected, undefined, true).catch(err => window.location.reload());\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const connectWalletConnectSimple = async () => {\n    try {\n      resetWalletConnector(walletconnect);\n      await activate(walletconnect);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  const connectCoinbaseSimple = async () => {\n    try {\n      await web3.activate(walletlink);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowModal(true);\n      } else if (!showToastFromProp) {\n        setShowModal(false);\n      }\n    };\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const renderConnectWalletModal = () => {\n    console.log(showModal, \"showtoast t or f?\");\n    return (\n      <Modal show={showToastFromProp} onHide={_closeModal}>\n        <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n          <Modal.Title>\n            <p>connect a wallet</p>\n          </Modal.Title>\n        </div>\n        <Modal.Body>\n          <div className=\"col-md-12\"></div>\n          <div>\n            <p className=\"short-address-modal\">\n              {\" \"}\n              {account ? shortAddress : \" \"}\n            </p>\n\n            <button class=\"btn-hover color-electric\" onClick={handleConnect}>\n              <img\n                width=\"30\"\n                height=\"30\"\n                style={{ marginRight: 20 }}\n                src=\"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"\n              ></img>\n              Connect Metamask Wallet\n            </button>\n            <pre></pre>\n            <div>\n              <button\n                class=\"btn-hover color-electric\"\n                onClick={connectCoinbaseSimple}\n              >\n                <img\n                  width=\"30\"\n                  height=\"30\"\n                  style={{ marginRight: 20 }}\n                  src=\"https://cdn.freelogovectors.net/wp-content/uploads/2021/12/coinbase-logo-freelogovectors.net_.png\n                  \"\n                ></img>\n                Connect Coinbase Wallet\n              </button>\n              <pre></pre>\n            </div>\n            <div>\n              <button\n                class=\"btn-hover color-electric\"\n                onClick={connectWalletConnectSimple}\n              >\n                <img\n                  width=\"30\"\n                  height=\"30\"\n                  style={{ marginRight: 20 }}\n                  src=\"https://docs.walletconnect.com/img/walletconnect-logo.svg\"\n                ></img>\n                Connect walletconnect\n              </button>\n              <pre></pre>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n  return <div> {renderConnectWalletModal()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}