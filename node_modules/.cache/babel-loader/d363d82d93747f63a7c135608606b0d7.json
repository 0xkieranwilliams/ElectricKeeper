{"ast":null,"code":"import _regeneratorRuntime from\"/home/johanna/Desktop/ElectricalEthereum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/johanna/Desktop/ElectricalEthereum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/johanna/Desktop/ElectricalEthereum/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Route,Routes}from\"react-router-dom\";import{DataContext}from\"./DataContext\";import{Web3ReactProvider,useWeb3React}from\"@web3-react/core\";import{InjectedConnector}from\"@web3-react/injected-connector\";import{Web3Provider}from\"@ethersproject/providers\";import{isMobile}from\"react-device-detect\";import React,{Component,useEffect,useState}from\"react\";import Web3 from\"web3\";import Home from\"./pages/Home\";import Buy from\"./pages/Buy\";import About from\"./pages/About\";import MobileDetected from\"./pages/MobileDetected\";import Navbar from\"./components/Navbar\";import Footer from\"./components/Footer\";import{injected,walletconnect,resetWalletConnector,walletlink}from\"./components/connectors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyContext=/*#__PURE__*/React.createContext();function App(){var _this=this;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userAccountAddress=_useState2[0],setUserAccountAddress=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),connectedAddrValue=_useState4[0],setConnectedAddrValue=_useState4[1];var _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account,library=_useWeb3React.library,connector=_useWeb3React.connector,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate;var web3=useWeb3React();var handleConnect=function handleConnect(){try{web3.activate(injected,undefined,true);}catch(error){console.error(error);}};var connectCoinbaseSimple=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return web3.activate(walletlink);case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 8:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function connectCoinbaseSimple(){return _ref.apply(this,arguments);};}();var handleConnectMetamask=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var that,web3,network,accountFromMetaMask;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:that=_this;web3=new Web3(Web3.givenProvider||\"http://localhost:8545\");_context2.next=4;return web3.eth.net.getNetworkType();case 4:network=_context2.sent;_context2.next=7;return window.ethereum.enable();case 7:_context2.next=9;return web3.eth.getAccounts();case 9:accountFromMetaMask=_context2.sent;console.log(accountFromMetaMask,\"account in app.js before set state\");setUserAccountAddress(accountFromMetaMask);setConnectedAddrValue(String(accountFromMetaMask).substr(0,5)+\"...\"+String(accountFromMetaMask).substr(38,4));console.log(userAccountAddress,\"user metamask address after set state\");case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function handleConnectMetamask(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(DataContext.Provider,{value:{userAccountAddress:userAccountAddress,errorMsg:\"\"},children:[isMobile?\"\":/*#__PURE__*/_jsx(Navbar,{handleConnectMetamask:handleConnectMetamask,connectedAddrValue:connectedAddrValue}),/*#__PURE__*/_jsx(\"main\",{children:isMobile?/*#__PURE__*/_jsx(MobileDetected,{}):/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/buy\",element:/*#__PURE__*/_jsx(Buy,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/error\",element:/*#__PURE__*/_jsx(MobileDetected,{})})]})}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/App.js"],"names":["Route","Routes","DataContext","Web3ReactProvider","useWeb3React","InjectedConnector","Web3Provider","isMobile","React","Component","useEffect","useState","Web3","Home","Buy","About","MobileDetected","Navbar","Footer","injected","walletconnect","resetWalletConnector","walletlink","MyContext","createContext","App","userAccountAddress","setUserAccountAddress","connectedAddrValue","setConnectedAddrValue","active","account","library","connector","activate","deactivate","web3","handleConnect","undefined","error","console","connectCoinbaseSimple","log","handleConnectMetamask","that","givenProvider","eth","net","getNetworkType","network","window","ethereum","enable","getAccounts","accountFromMetaMask","String","substr","errorMsg"],"mappings":"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","sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport { DataContext } from \"./DataContext\";\n\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { isMobile } from \"react-device-detect\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Home from \"./pages/Home\";\nimport Buy from \"./pages/Buy\";\n\nimport About from \"./pages/About\";\nimport MobileDetected from \"./pages/MobileDetected\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport {\n  injected,\n  walletconnect,\n  resetWalletConnector,\n  walletlink,\n} from \"./components/connectors\";\n\nconst MyContext = React.createContext();\n\nfunction App() {\n  const [userAccountAddress, setUserAccountAddress] = useState(\"\");\n  const [connectedAddrValue, setConnectedAddrValue] = useState(\"\");\n\n  const { active, account, library, connector, activate, deactivate } =\n    useWeb3React();\n  const web3 = useWeb3React();\n\n  const handleConnect = () => {\n    try {\n      web3.activate(injected, undefined, true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectCoinbaseSimple = async () => {\n    try {\n      await web3.activate(walletlink);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  const handleConnectMetamask = async () => {\n    let that = this;\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable();\n    //Fetch account data:\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    console.log(accountFromMetaMask, \"account in app.js before set state\");\n    setUserAccountAddress(accountFromMetaMask);\n    setConnectedAddrValue(\n      String(accountFromMetaMask).substr(0, 5) +\n        \"...\" +\n        String(accountFromMetaMask).substr(38, 4)\n    );\n\n    console.log(userAccountAddress, \"user metamask address after set state\");\n  };\n\n  return (\n    <DataContext.Provider value={{ userAccountAddress: userAccountAddress, errorMsg: \"\" }}>\n      {isMobile ? (\n        \"\"\n      ) : (\n        <Navbar\n          handleConnectMetamask={handleConnectMetamask}\n          connectedAddrValue={connectedAddrValue}\n        />\n      )}\n      <main>\n\n        {isMobile ? (\n          <MobileDetected />\n        ) : (\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/buy\" element={<Buy />} />\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/error\" element={<MobileDetected />} />\n          </Routes>\n        )}\n\n      </main>\n\n\n      <Footer />\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}