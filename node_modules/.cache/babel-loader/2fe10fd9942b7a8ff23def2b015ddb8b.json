{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Buy.js\",\n    _s = $RefreshSig$();\n\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { ABI, CONTRACT_ADDRESS, ELECTRICKEEPER_ABI, ELECTRICKEEPER_CONTRACT_ADDRESS } from \"../config\";\nimport { BUTTON_OBJECT } from \"./ButtonData\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { DataContext } from \"../DataContext\"; //TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Buy(_ref) {\n  _s();\n\n  let {\n    degree,\n    userLocation,\n    basic\n  } = _ref;\n  const [maticPriceFeedContract, setMaticPriceFeedContract] = useState(null);\n  const [electricKeeperContract, setElectricKeeperContract] = useState(null);\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [latestPriceOfMatic_1p, setLatestPriceOfMatic_1p] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\"); //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n\n      const chainId = await web3.eth.getChainId(); //Load the smart contract\n\n      const maticPriceFeedContract = new web3.eth.Contract(ABI, CONTRACT_ADDRESS);\n      const electricKeeperContract = new web3.eth.Contract(ELECTRICKEEPER_ABI, ELECTRICKEEPER_CONTRACT_ADDRESS);\n      setElectricKeeperContract(electricKeeperContract);\n      setMaticPriceFeedContract(maticPriceFeedContract);\n      console.log(maticPriceFeedContract, \"This is the matic price feed contract\");\n      console.log(electricKeeperContract, \"This is electric keeper contract\");\n\n      if (maticPriceFeedContract !== null) {\n        maticPriceFeedContract.methods.getLatestPrice().call().then(data => {\n          setLatestPriceOfMatic_1p(web3.utils.fromWei(data));\n          console.log(data);\n          console.log(web3.utils.fromWei(data));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    loadBlockchainData();\n  }, [account]);\n  useEffect(() => {\n    console.log(\"matic Price Feed contract: \", maticPriceFeedContract);\n  }, []);\n\n  const estimatedMatic = () => {\n    return latestPriceOfMatic_1p && inputAmount !== \"\" ? latestPriceOfMatic_1p * (100 * inputAmount) : 0;\n  };\n\n  const handleBuyButtonClick = colorNumber => {\n    console.log(\"You chose the color:\", colorNumber);\n    console.log(account, \"account in BUY handle click\");\n\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n      web3.eth.sendTransaction({\n        to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n        data: electricKeeperContract.methods.BuyElectricityTimeOn(colorNumber, inputAmount).encodeABI(),\n        value: web3.utils.toWei(inputAmount),\n        from: account\n      });\n    } catch (err) {\n      console.log(err, \"ERROR !! You have to connect to metamask!\");\n    }\n  };\n\n  const renderButtons = () => {\n    console.log(\"Hello?????\", BUTTON_OBJECT);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"HAAAJ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), BUTTON_OBJECT.map(i => {\n        console.log(i.title, 'TIIITEL');\n\n        /*#__PURE__*/\n        _jsxDEV(\"button\", {\n          className: i.styleClass,\n          onClick: () => handleBuyButtonClick(i.buttonClickValue),\n          children: i.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderInputBox = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 150,\n          marginTop: 50,\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"50%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"#ffdd9a\",\n              marginRight: \"20px\",\n              fontSize: \"10px\"\n            },\n            htmlFor: \"minutes\",\n            children: \"price: $1/minute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            class: \"input-matic\",\n            min: \"0\",\n            placeholder: \"enter amount of minutes\",\n            \"data-name\": \"minutes\",\n            value: inputAmount,\n            onChange: e => setInputAmount(e.target.value),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: \"#ffdd9a\",\n            fontSize: \"10px\"\n          },\n          htmlFor: \"minutes\",\n          children: \"pick LED color to buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"80%\"\n          },\n          children: renderButtons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Amount: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), \" \\xA0\\xA0\\xA0\\xA0 \\u2248 \\xA0\", \" \", estimatedMatic().toFixed(3), \" matic\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), \"buy electricity\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter the amount of minutes of electricity you want to buy \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: renderInputBox()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), showToast ? /*#__PURE__*/_jsxDEV(ErrorModal, {\n      showToastFromProp: showToast,\n      onClose: () => setShowToast(false),\n      errorMsg: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Buy, \"vQLZtVuJ/OnuZTbNFTXSrEn5Cok=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Buy.js"],"names":["React","Component","useEffect","useState","Web3","ABI","CONTRACT_ADDRESS","ELECTRICKEEPER_ABI","ELECTRICKEEPER_CONTRACT_ADDRESS","BUTTON_OBJECT","ErrorModal","Web3ReactProvider","useWeb3React","DataContext","Buy","degree","userLocation","basic","maticPriceFeedContract","setMaticPriceFeedContract","electricKeeperContract","setElectricKeeperContract","wethBalance","setAvailableWethBalance","inputAmount","setInputAmount","latestPriceOfMatic_1p","setLatestPriceOfMatic_1p","showToast","setShowToast","errorMsg","setErrorMsg","account","window","ethereum","on","location","reload","loadBlockchainData","web3","givenProvider","chainId","eth","getChainId","Contract","console","log","methods","getLatestPrice","call","then","data","utils","fromWei","catch","err","estimatedMatic","handleBuyButtonClick","colorNumber","currentProvider","sendTransaction","to","BuyElectricityTimeOn","encodeABI","value","toWei","from","renderButtons","map","i","title","styleClass","buttonClickValue","renderInputBox","marginBottom","marginTop","display","alignItems","flexDirection","width","color","marginRight","fontSize","e","target","toFixed"],"mappings":"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","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport {\n  ABI,\n  CONTRACT_ADDRESS,\n  ELECTRICKEEPER_ABI,\n  ELECTRICKEEPER_CONTRACT_ADDRESS,\n} from \"../config\";\nimport { BUTTON_OBJECT } from \"./ButtonData\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\n\nimport { DataContext } from \"../DataContext\";\n\n//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nexport default function Buy({ degree, userLocation, basic }) {\n  const [maticPriceFeedContract, setMaticPriceFeedContract] = useState(null);\n  const [electricKeeperContract, setElectricKeeperContract] = useState(null);\n\n  const [wethBalance, setAvailableWethBalance] = useState(null);\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [latestPriceOfMatic_1p, setLatestPriceOfMatic_1p] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n      const chainId = await web3.eth.getChainId();\n\n      //Load the smart contract\n      const maticPriceFeedContract = new web3.eth.Contract(\n        ABI,\n        CONTRACT_ADDRESS\n      );\n      const electricKeeperContract = new web3.eth.Contract(\n        ELECTRICKEEPER_ABI,\n        ELECTRICKEEPER_CONTRACT_ADDRESS\n      );\n      setElectricKeeperContract(electricKeeperContract);\n      setMaticPriceFeedContract(maticPriceFeedContract);\n      console.log(\n        maticPriceFeedContract,\n        \"This is the matic price feed contract\"\n      );\n      console.log(electricKeeperContract, \"This is electric keeper contract\");\n\n      if (maticPriceFeedContract !== null) {\n        maticPriceFeedContract.methods\n          .getLatestPrice()\n          .call()\n          .then((data) => {\n            setLatestPriceOfMatic_1p(web3.utils.fromWei(data));\n            console.log(data);\n            console.log(web3.utils.fromWei(data));\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    loadBlockchainData();\n  }, [account]);\n\n  useEffect(() => {\n    console.log(\"matic Price Feed contract: \", maticPriceFeedContract);\n  }, []);\n\n  const estimatedMatic = () => {\n    return latestPriceOfMatic_1p && inputAmount !== \"\"\n      ? latestPriceOfMatic_1p * (100 * inputAmount)\n      : 0;\n  };\n\n  const handleBuyButtonClick = (colorNumber) => {\n    console.log(\"You chose the color:\", colorNumber);\n    console.log(account, \"account in BUY handle click\");\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n      web3.eth.sendTransaction({\n        to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n        data: electricKeeperContract.methods\n          .BuyElectricityTimeOn(colorNumber, inputAmount)\n          .encodeABI(),\n        value: web3.utils.toWei(inputAmount),\n        from: account,\n      });\n    } catch (err) {\n      console.log(err, \"ERROR !! You have to connect to metamask!\");\n    }\n  };\n\n  const renderButtons = () => {\n    console.log(\"Hello?????\", BUTTON_OBJECT);\n    return (\n      <div>\n        <p>HAAAJ</p>\n        {BUTTON_OBJECT.map((i) => {\n          console.log(i.title ,'TIIITEL');\n          <button\n            className={i.styleClass}\n            onClick={() => handleBuyButtonClick(i.buttonClickValue)}\n          >\n            {i.title}\n          </button>;\n        })}\n      </div>\n    );\n  };\n\n  const renderInputBox = () => {\n    return (\n      <>\n        <div\n          style={{\n            marginBottom: 150,\n            marginTop: 50,\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"50%\" }}\n          >\n            <label\n              style={{\n                color: \"#ffdd9a\",\n                marginRight: \"20px\",\n                fontSize: \"10px\",\n              }}\n              htmlFor=\"minutes\"\n            >\n              price: $1/minute\n            </label>\n            <input\n              type=\"number\"\n              class=\"input-matic\"\n              min=\"0\"\n              placeholder=\"enter amount of minutes\"\n              data-name=\"minutes\"\n              value={inputAmount}\n              onChange={(e) => setInputAmount(e.target.value)}\n              style={{ width: \"100%\" }}\n            ></input>\n          </div>\n          <br />\n          <label\n            style={{\n              color: \"#ffdd9a\",\n              fontSize: \"10px\",\n            }}\n            htmlFor=\"minutes\"\n          >\n            pick LED color to buy\n          </label>\n          <div style={{ width: \"80%\" }}>{renderButtons()}</div>\n          <br />\n          <p>\n            <b>Amount: </b> &nbsp;&nbsp;&nbsp;&nbsp; ≈ &nbsp;{\" \"}\n            {estimatedMatic().toFixed(3)} matic\n          </p>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div>\n          <h1>\n            <br></br>\n            buy electricity\n          </h1>\n          <p>enter the amount of minutes of electricity you want to buy </p>\n          <div className=\"row\">{renderInputBox()}</div>\n        </div>\n      </div>\n      {showToast ? (\n        <ErrorModal\n          showToastFromProp={showToast}\n          onClose={() => setShowToast(false)}\n          errorMsg={errorMsg}\n        ></ErrorModal>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}