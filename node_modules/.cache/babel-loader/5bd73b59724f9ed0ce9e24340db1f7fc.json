{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Vrf.js\",\n    _s = $RefreshSig$();\n\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { useState } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\n\nconst web3 = new Web3(rpcURL);\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"have\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"want\",\n    type: \"address\"\n  }],\n  name: \"OnlyCoordinatorCanFulfill\",\n  type: \"error\"\n}, {\n  anonymous: false,\n  inputs: [],\n  name: \"lightShowUpdate\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"requestId\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"randomWords\",\n    type: \"uint256[]\"\n  }],\n  name: \"rawFulfillRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"requestRandomWords\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  name: \"twoRandomWords\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst contractDefined_JS = new web3.eth.Contract(contractABI_JS, contractAddress_JS);\n\nconst Vrf = () => {\n  _s();\n\n  const [colorSet1, setColourSet1] = useState();\n  const [colorSet2, setColourSet2] = useState();\n  const colors = [\"RED\", \"BLUE\", \"YELLOW\", \"GREEN\", \"PURPLE\", \"ORANGE\", \"PINK\", \"WHITE\"];\n  let ArrayStorage = [];\n\n  async function updateLights() {\n    if (ArrayStorage.length == 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods.twoRandomWords(randomNumbers).call((err, balance) => {\n          ArrayStorage.push(balance % 255);\n        });\n      }\n\n      console.log(ArrayStorage[0].toString(2));\n      setColourSet1(ArrayStorage[0]);\n      setColourSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n  contractDefined_JS.events.lightShowUpdate({\n    //Subscribe to event.\n    fromBlock: \"latest\"\n  }, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n    console.log(\"EVENT DETECTED! NEW STATE VALUE: \");\n    ArrayStorage = []; //WIPE LAST VALUES THEN UPDATE AGAIN.\n\n    updateLights(); //Call the get function to get the most accurate present state for the value.\n  }).on(\"changed\", function (eventResult) {// remove event from local database\n  }).on(\"error\", console.error);\n\n  const eventListener = contractDefined_JS => {\n    let that = this;\n    contractDefined_JS.events.eventBlockTime({\n      fromBlock: \"latest\"\n    }, function (error, eventResult) {}).on(\"data\", function (eventResult) {\n      //Call the get function to get the most accurate present state for the value.\n\n      /*   that.setInitialValues(\n          volcanoContract,\n          that.state.chainlinkContract\n        ); */\n      //Do a wait 30s here\n      that.setState({\n        loading: false,\n        loadingVolcanoData: false\n      });\n      console.log(\"eventlistner triggered!\");\n    }).on(\"changed\", function (eventResult) {// remove event from local database\n    }).on(\"error\", console.error);\n  };\n\n  const colorSetInColor = colorSet => {\n    let chars = Array.from(colorSet.toString(2));\n    console.log(chars); // return colorSet.toString(2);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        style: {\n          backgroundColor: \"grey\",\n          fontStyle: \"normal\",\n          fontSize: \"26px\",\n          padding: \"4px 8px\",\n          borderRadius: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"white\",\n            fontStyle: \"normal\"\n          },\n          children: chars[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"pink\",\n            fontStyle: \"normal\"\n          },\n          children: chars[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"orange\",\n            fontStyle: \"normal\"\n          },\n          children: chars[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"purple\",\n            fontStyle: \"normal\"\n          },\n          children: chars[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"green\",\n            fontStyle: \"normal\"\n          },\n          children: chars[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"yellow\",\n            fontStyle: \"normal\"\n          },\n          children: chars[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"blue\",\n            fontStyle: \"normal\"\n          },\n          children: chars[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          style: {\n            color: \"red\",\n            fontStyle: \"normal\"\n          },\n          children: chars[7]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"VRF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), colorSet1 && colorSet2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Colour Set 1: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\\xA0\", colorSet1, \"\\xA0\\xA0\\xA0\", colorSetInColor(colorSet1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Colour Set 2: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), \"\\xA0\\xA0\\xA0\", colorSet2, \"\\xA0\\xA0\\xA0\", colorSetInColor(colorSet2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : '', /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: EthLogo,\n          style: {\n            width: \"40%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Vrf, \"GKEtDhhB25dhrpkaN9+dBy66Qnw=\");\n\n_c = Vrf;\nexport default Vrf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vrf\");","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/pages/Vrf.js"],"names":["useState","Web3","rpcURL","process","env","REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey","web3","contractAddress_JS","contractABI_JS","inputs","internalType","name","type","anonymous","outputs","stateMutability","contractDefined_JS","eth","Contract","Vrf","colorSet1","setColourSet1","colorSet2","setColourSet2","colors","ArrayStorage","updateLights","length","randomNumbers","console","log","methods","twoRandomWords","call","err","balance","push","toString","events","lightShowUpdate","fromBlock","error","eventResult","on","eventListener","that","eventBlockTime","setState","loading","loadingVolcanoData","colorSetInColor","colorSet","chars","Array","from","backgroundColor","fontStyle","fontSize","padding","borderRadius","color","EthLogo","width"],"mappings":";;;;AACA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,kDAA3B,C,CAA+E;AAC/E;;AACA,MAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASC,MAAT,CAAb;AACA,MAAMK,kBAAkB,GAAG,4CAA3B;AACA,MAAMC,cAAc,GAAG,CAAE;AAAEC,EAAAA,MAAM,EAAE,CAAE;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,MAAjC;AAAyCC,IAAAA,IAAI,EAAE;AAA/C,GAAF,EAA8D;AAAEF,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,MAAjC;AAAyCC,IAAAA,IAAI,EAAE;AAA/C,GAA9D,CAAV;AAAuID,EAAAA,IAAI,EAAE,2BAA7I;AAA0KC,EAAAA,IAAI,EAAE;AAAhL,CAAF,EAA8L;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBJ,EAAAA,MAAM,EAAE,EAA5B;AAAgCE,EAAAA,IAAI,EAAE,iBAAtC;AAAyDC,EAAAA,IAAI,EAAE;AAA/D,CAA9L,EAAwQ;AAAEH,EAAAA,MAAM,EAAE,CAAE;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,WAAjC;AAA8CC,IAAAA,IAAI,EAAE;AAApD,GAAF,EAAmE;AAAEF,IAAAA,YAAY,EAAE,WAAhB;AAA6BC,IAAAA,IAAI,EAAE,aAAnC;AAAkDC,IAAAA,IAAI,EAAE;AAAxD,GAAnE,CAAV;AAAuJD,EAAAA,IAAI,EAAE,uBAA7J;AAAsLG,EAAAA,OAAO,EAAE,EAA/L;AAAmMC,EAAAA,eAAe,EAAE,YAApN;AAAkOH,EAAAA,IAAI,EAAE;AAAxO,CAAxQ,EAA+f;AAAEH,EAAAA,MAAM,EAAE,EAAV;AAAcE,EAAAA,IAAI,EAAE,oBAApB;AAA0CG,EAAAA,OAAO,EAAE,EAAnD;AAAuDC,EAAAA,eAAe,EAAE,YAAxE;AAAsFH,EAAAA,IAAI,EAAE;AAA5F,CAA/f,EAA0mB;AAAEH,EAAAA,MAAM,EAAE,EAAV;AAAcM,EAAAA,eAAe,EAAE,YAA/B;AAA6CH,EAAAA,IAAI,EAAE;AAAnD,CAA1mB,EAA8qB;AAAEH,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,EAAjC;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAAD,CAAV;AAAoED,EAAAA,IAAI,EAAE,gBAA1E;AAA4FG,EAAAA,OAAO,EAAE,CAAC;AAAEJ,IAAAA,YAAY,EAAE,SAAhB;AAA2BC,IAAAA,IAAI,EAAE,EAAjC;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GAAD,CAArG;AAA+JG,EAAAA,eAAe,EAAE,MAAhL;AAAuLH,EAAAA,IAAI,EAAE;AAA7L,CAA9qB,CAAvB;AACA,MAAMI,kBAAkB,GAAG,IAAIV,IAAI,CAACW,GAAL,CAASC,QAAb,CACzBV,cADyB,EAEzBD,kBAFyB,CAA3B;;AAOA,MAAMY,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,aAAZ,IAA6BrB,QAAQ,EAA3C;AACA,QAAM,CAACsB,SAAD,EAAYC,aAAZ,IAA6BvB,QAAQ,EAA3C;AAEA,QAAMwB,MAAM,GAAI,CACd,KADc,EAEd,MAFc,EAGd,QAHc,EAId,OAJc,EAKd,QALc,EAMd,QANc,EAOd,MAPc,EAQd,OARc,CAAhB;AAWA,MAAIC,YAAY,GAAG,EAAnB;;AAGA,iBAAeC,YAAf,GAA8B;AAC5B,QAAID,YAAY,CAACE,MAAb,IAAuB,CAA3B,EAA8B;AAC5B,WAAK,IAAIC,aAAa,GAAG,CAAzB,EAA4BA,aAAa,GAAG,CAA5C,EAA+CA,aAAa,EAA5D,EAAgE;AAC9DC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,cAAMd,kBAAkB,CAACe,OAAnB,CACHC,cADG,CACYJ,aADZ,EAEHK,IAFG,CAEE,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACtBV,UAAAA,YAAY,CAACW,IAAb,CAAkBD,OAAO,GAAG,GAA5B;AACD,SAJG,CAAN;AAKD;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAAC,CAAD,CAAZ,CAAgBY,QAAhB,CAAyB,CAAzB,CAAZ;AACAhB,MAAAA,aAAa,CAACI,YAAY,CAAC,CAAD,CAAb,CAAb;AACAF,MAAAA,aAAa,CAACE,YAAY,CAAC,CAAD,CAAb,CAAb;AACD;AACF;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAJ,EAAAA,YAAY;AAKZV,EAAAA,kBAAkB,CAACsB,MAAnB,CACGC,eADH,CAEI;AACE;AACAC,IAAAA,SAAS,EAAE;AAFb,GAFJ,EAMI,UAAUC,KAAV,EAAiBC,WAAjB,EAA8B,CAAE,CANpC,EAQGC,EARH,CAQM,MARN,EAQc,UAAUD,WAAV,EAAuB;AACjCb,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAL,IAAAA,YAAY,GAAG,EAAf,CAFiC,CAEd;;AACnBC,IAAAA,YAAY,GAHqB,CAGjB;AACjB,GAZH,EAaGiB,EAbH,CAaM,SAbN,EAaiB,UAAUD,WAAV,EAAuB,CACpC;AACD,GAfH,EAgBGC,EAhBH,CAgBM,OAhBN,EAgBed,OAAO,CAACY,KAhBvB;;AAmBE,QAAMG,aAAa,GAAI5B,kBAAD,IAAwB;AAC5C,QAAI6B,IAAI,GAAG,IAAX;AACA7B,IAAAA,kBAAkB,CAACsB,MAAnB,CACGQ,cADH,CAEI;AACEN,MAAAA,SAAS,EAAE;AADb,KAFJ,EAKI,UAAUC,KAAV,EAAiBC,WAAjB,EAA8B,CAAE,CALpC,EAOGC,EAPH,CAOM,MAPN,EAOc,UAAUD,WAAV,EAAuB;AACjC;;AACF;AACR;AACA;AACA;AAEU;AACAG,MAAAA,IAAI,CAACE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,kBAAkB,EAAE;AAAtC,OAAd;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KAjBH,EAkBGa,EAlBH,CAkBM,SAlBN,EAkBiB,UAAUD,WAAV,EAAuB,CACpC;AACD,KApBH,EAqBGC,EArBH,CAqBM,OArBN,EAqBed,OAAO,CAACY,KArBvB;AAsBD,GAxBD;;AA2BF,QAAMS,eAAe,GAAIC,QAAD,IAAc;AACpC,QAAIC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,QAAQ,CAACd,QAAT,CAAkB,CAAlB,CAAX,CAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ,EAFoC,CAGpC;;AACA,wBACE;AAAA,6BAEE;AAAI,QAAA,KAAK,EAAE;AAACG,UAAAA,eAAe,EAAE,MAAlB;AAA0BC,UAAAA,SAAS,EAAE,QAArC;AAA+CC,UAAAA,QAAQ,EAAE,MAAzD;AAAiEC,UAAAA,OAAO,EAAE,SAA1E;AAAqFC,UAAAA,YAAY,EAAC;AAAlG,SAAX;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE,OAAR;AAAiBJ,YAAAA,SAAS,EAAE;AAA5B,WAAX;AAAA,oBAAmDJ,KAAK,CAAC,CAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,MAAR;AAAgBJ,YAAAA,SAAS,EAAE;AAA3B,WAAX;AAAA,oBAAkDJ,KAAK,CAAC,CAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,QAAR;AAAkBJ,YAAAA,SAAS,EAAE;AAA7B,WAAX;AAAA,oBAAoDJ,KAAK,CAAC,CAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,QAAR;AAAkBJ,YAAAA,SAAS,EAAE;AAA7B,WAAX;AAAA,oBAAoDJ,KAAK,CAAC,CAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,OAAR;AAAiBJ,YAAAA,SAAS,EAAE;AAA5B,WAAX;AAAA,oBAAmDJ,KAAK,CAAC,CAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,QAAR;AAAkBJ,YAAAA,SAAS,EAAE;AAA7B,WAAX;AAAA,oBAAoDJ,KAAK,CAAC,CAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,MAAR;AAAgBJ,YAAAA,SAAS,EAAE;AAA3B,WAAX;AAAA,oBAAkDJ,KAAK,CAAC,CAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAI,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,KAAR;AAAeJ,YAAAA,SAAS,EAAE;AAA1B,WAAX;AAAA,oBAAiDJ,KAAK,CAAC,CAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,qBADF;AAeD,GAnBD;;AAqBA,sBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACE;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA,kBAAJ,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGhC,SAAS,IAAIE,SAAb,gBACC;AAAA,kCACI;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,kBAGGF,SAHH,kBAKG8B,eAAe,CAAC9B,SAAD,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,kBAGGE,SAHH,kBAMG4B,eAAe,CAAC5B,SAAD,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA,wBADD,GAkBE,EAtBL,eAwBE;AAAA;AAAA;AAAA;AAAA,gBAxBF,eAyBI;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA4BE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEuC,OAAV;AAAmB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF,eA+BE;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAjJD;;GAAM3C,G;;KAAAA,G;AAmJN,eAAeA,GAAf","sourcesContent":["import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport {useState} from 'react';\nimport Web3 from \"web3\"; \nconst rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\nconst web3 = new Web3(rpcURL);\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [ { inputs: [ { internalType: \"address\", name: \"have\", type: \"address\" }, { internalType: \"address\", name: \"want\", type: \"address\" }, ], name: \"OnlyCoordinatorCanFulfill\", type: \"error\", }, { anonymous: false, inputs: [], name: \"lightShowUpdate\", type: \"event\" }, { inputs: [ { internalType: \"uint256\", name: \"requestId\", type: \"uint256\" }, { internalType: \"uint256[]\", name: \"randomWords\", type: \"uint256[]\" }, ], name: \"rawFulfillRandomWords\", outputs: [], stateMutability: \"nonpayable\", type: \"function\", }, { inputs: [], name: \"requestRandomWords\", outputs: [], stateMutability: \"nonpayable\", type: \"function\", }, { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" }, { inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], name: \"twoRandomWords\", outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], stateMutability: \"view\",type: \"function\",},];\nconst contractDefined_JS = new web3.eth.Contract(\n  contractABI_JS,\n  contractAddress_JS\n);\n\n\n\nconst Vrf = () => {\n\n  const [colorSet1, setColourSet1] = useState();\n  const [colorSet2, setColourSet2] = useState();\n\n  const colors =  [\n    \"RED\",\n    \"BLUE\",\n    \"YELLOW\",\n    \"GREEN\",\n    \"PURPLE\",\n    \"ORANGE\",\n    \"PINK\",\n    \"WHITE\",\n  ];\n\n  let ArrayStorage = [];\n\n\n  async function updateLights() {\n    if (ArrayStorage.length == 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods\n          .twoRandomWords(randomNumbers)\n          .call((err, balance) => {\n            ArrayStorage.push(balance % 255);\n          });\n      }\n      console.log(ArrayStorage[0].toString(2));\n      setColourSet1(ArrayStorage[0]);\n      setColourSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n\n\n\n\n  contractDefined_JS.events\n    .lightShowUpdate(\n      {\n        //Subscribe to event.\n        fromBlock: \"latest\",\n      },\n      function (error, eventResult) {}\n    )\n    .on(\"data\", function (eventResult) {\n      console.log(\"EVENT DETECTED! NEW STATE VALUE: \");\n      ArrayStorage = []; //WIPE LAST VALUES THEN UPDATE AGAIN.\n      updateLights(); //Call the get function to get the most accurate present state for the value.\n    })\n    .on(\"changed\", function (eventResult) {\n      // remove event from local database\n    })\n    .on(\"error\", console.error);\n\n\n    const eventListener = (contractDefined_JS) => {\n      let that = this;\n      contractDefined_JS.events\n        .eventBlockTime(\n          {\n            fromBlock: \"latest\",\n          },\n          function (error, eventResult) {}\n        )\n        .on(\"data\", function (eventResult) {\n          //Call the get function to get the most accurate present state for the value.\n        /*   that.setInitialValues(\n            volcanoContract,\n            that.state.chainlinkContract\n          ); */\n  \n          //Do a wait 30s here\n          that.setState({ loading: false, loadingVolcanoData: false });\n          console.log(\"eventlistner triggered!\");\n        })\n        .on(\"changed\", function (eventResult) {\n          // remove event from local database\n        })\n        .on(\"error\", console.error);\n    }\n\n\n  const colorSetInColor = (colorSet) => {\n    let chars = Array.from(colorSet.toString(2));\n    console.log(chars);\n    // return colorSet.toString(2);\n    return (\n      <>\n\n        <em style={{backgroundColor: \"grey\", fontStyle: \"normal\", fontSize: \"26px\", padding: \"4px 8px\", borderRadius:\"10px\"}}>\n          <em style={{color: \"white\", fontStyle: \"normal\"}}>{chars[0]}</em>\n          <em style={{color: \"pink\", fontStyle: \"normal\"}}>{chars[1]}</em>\n          <em style={{color: \"orange\", fontStyle: \"normal\"}}>{chars[2]}</em>\n          <em style={{color: \"purple\", fontStyle: \"normal\"}}>{chars[3]}</em>\n          <em style={{color: \"green\", fontStyle: \"normal\"}}>{chars[4]}</em>\n          <em style={{color: \"yellow\", fontStyle: \"normal\"}}>{chars[5]}</em>\n          <em style={{color: \"blue\", fontStyle: \"normal\"}}>{chars[6]}</em>\n          <em style={{color: \"red\", fontStyle: \"normal\"}}>{chars[7]}</em>\n        </em>\n      </>\n    );\n  }\n\n  return (\n    <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <h1><br></br>\n          <b>VRF</b>\n        </h1>\n        {colorSet1 && colorSet2 ? (\n          <>\n              <p>\n                <b>Colour Set 1: </b> \n                &nbsp;&nbsp;&nbsp;\n                {colorSet1}\n                &nbsp;&nbsp;&nbsp;\n                {colorSetInColor(colorSet1)}\n              </p>\n              <p>\n                <b>Colour Set 2: </b> \n                &nbsp;&nbsp;&nbsp;\n                {colorSet2}\n                &nbsp;&nbsp;&nbsp;\n                {/* {colorSet2.toString(2)} */}\n                {colorSetInColor(colorSet2)}\n              </p>\n          </>\n        ): ''}\n        {/* <p><b></b>{colorSet2}</p> */}\n        <p></p>\n          <br></br>\n        </div>\n      <div class=\"col-6\">\n        <img src={EthLogo} style={{ width: \"40%\" }} />\n      </div>\n      <div class=\"col\"></div>\n    </div>\n  </div>\n  );\n};\n\nexport default Vrf;\n"]},"metadata":{},"sourceType":"module"}