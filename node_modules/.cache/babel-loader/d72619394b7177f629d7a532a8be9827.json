{"ast":null,"code":"var _jsxFileName = \"/home/johanna/Desktop/ElectricalEthereum/frontend/src/components/ConnectWalletModal.js\",\n    _s = $RefreshSig$();\n\nimport { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport \"./ConnectWalletModal.css\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { injected, walletconnect, resetWalletConnector, walletlink } from \"./connectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConnectWalletModal(_ref) {\n  _s();\n\n  let {\n    showToastFromProp,\n    errorMsg,\n    onClose\n  } = _ref;\n  const [showModal, setShowModal] = useState();\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate\n  } = useWeb3React();\n  const web3 = useWeb3React();\n  const shortAddress = account ? String(account).substr(0, 5) + \"...\" + String(account).substr(38, 4) : \"\";\n\n  const _closeModal = () => {\n    setShowModal(false);\n    onClose();\n  };\n\n  const handleConnect = () => {\n    try {\n      web3.activate(injected, undefined, true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWalletConnectSimple = async () => {\n    try {\n      resetWalletConnector(walletconnect);\n      await web3reactContext.activate(walletconnect);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  const connectCoinbaseSimple = async () => {\n    try {\n      await web3.activate(walletlink);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowModal(true);\n      } else if (!showToastFromProp) {\n        setShowModal(false);\n      }\n    };\n\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const renderConnectWalletModal = () => {\n    console.log(showModal, \"showtoast t or f?\");\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showToastFromProp,\n      onHide: _closeModal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connect a wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [account ? shortAddress : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"500%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn-hover color-electric\",\n              onClick: handleConnect,\n              children: \"Connect Metamask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn-hover color-electric\",\n                onClick: connectCoinbaseSimple,\n                children: \"Connect Coinbase Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn-hover color-electric\",\n                onClick: connectCoinbaseSimple,\n                children: \"Connect XX Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: \"\",\n          children: \"Btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: \"\",\n          children: \"Btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", renderConnectWalletModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ConnectWalletModal, \"VaqhzSCzQfnJU+HY6U3qWVPV1zQ=\", false, function () {\n  return [useWeb3React, useWeb3React];\n});\n\n_c = ConnectWalletModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectWalletModal\");","map":{"version":3,"sources":["/home/johanna/Desktop/ElectricalEthereum/frontend/src/components/ConnectWalletModal.js"],"names":["Modal","React","Component","useEffect","useState","Web3ReactProvider","useWeb3React","InjectedConnector","Web3Provider","injected","walletconnect","resetWalletConnector","walletlink","ConnectWalletModal","showToastFromProp","errorMsg","onClose","showModal","setShowModal","active","account","library","connector","activate","deactivate","web3","shortAddress","String","substr","_closeModal","handleConnect","undefined","error","console","connectWalletConnectSimple","web3reactContext","ex","log","connectCoinbaseSimple","updateStateIfPropChanges","renderConnectWalletModal","margin","width"],"mappings":"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","sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport \"./ConnectWalletModal.css\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport {\n  injected,\n  walletconnect,\n  resetWalletConnector,\n  walletlink,\n} from \"./connectors\";\n\nexport default function ConnectWalletModal({\n  showToastFromProp,\n  errorMsg,\n  onClose,\n}) {\n  const [showModal, setShowModal] = useState();\n  const { active, account, library, connector, activate, deactivate } =\n    useWeb3React();\n  const web3 = useWeb3React();\n  const shortAddress = account\n    ? String(account).substr(0, 5) + \"...\" + String(account).substr(38, 4)\n    : \"\";\n\n  const _closeModal = () => {\n    setShowModal(false);\n    onClose();\n  };\n\n  const handleConnect = () => {\n    try {\n      web3.activate(injected, undefined, true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const connectWalletConnectSimple = async () => {\n    try {\n        resetWalletConnector(walletconnect);\n        await web3reactContext.activate(walletconnect);\n    } catch (ex) {\n        console.log(ex);\n    }\n};\n\n  const connectCoinbaseSimple = async () => {\n    try {\n      await web3.activate(walletlink);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowModal(true);\n      } else if (!showToastFromProp) {\n        setShowModal(false);\n      }\n    };\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const renderConnectWalletModal = () => {\n    console.log(showModal, \"showtoast t or f?\");\n    return (\n      <Modal show={showToastFromProp} onHide={_closeModal}>\n        <div style={{ margin: \"10px\" }}>\n          <Modal.Title>\n            <p>Connect a wallet</p>\n          </Modal.Title>\n        </div>\n        <Modal.Body>\n          <div className=\"col-md-12\"></div>\n          <div>\n          {account ? shortAddress : \"\"}\n            <div style={{ width: \"500%\" }}>\n              <button class=\"btn-hover color-electric\" onClick={handleConnect}>\n                Connect Metamask\n              </button>\n              <pre></pre>\n              <div>\n                <button\n                  class=\"btn-hover color-electric\"\n                  onClick={connectCoinbaseSimple}\n                >\n                  Connect Coinbase Wallet\n                </button>\n                <pre></pre>\n              </div>\n              <div>\n                <button\n                  class=\"btn-hover color-electric\"\n                  onClick={connectCoinbaseSimple}\n                >\n                  Connect XX Wallet\n                </button>\n                <pre></pre>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className=\"btn btn-danger\" onClick=\"\">\n            Btn\n          </button>\n          <button className=\"btn btn-primary\" onClick=\"\">\n            Btn\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n  return <div> {renderConnectWalletModal()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}