{"ast":null,"code":"import _regeneratorRuntime from\"/home/johanna/Desktop/weth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/johanna/Desktop/weth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/johanna/Desktop/weth-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Route,Routes}from\"react-router-dom\";import{DataContext}from'./DataContext';import{isMobile}from\"react-device-detect\";import React,{Component,useEffect,useState}from\"react\";import Web3 from\"web3\";import HomeWrap from\"./pages/HomeWrap\";import Wrap from\"./pages/Wrap\";import About from\"./pages/About\";import MobileDetected from\"./pages/MobileDetected\";import Navbar from\"./components/Navbar\";import Footer from\"./components/Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyContext=/*#__PURE__*/React.createContext();function App(){var _this=this;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userAccountAddress=_useState2[0],setUserAccountAddress=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),connectedAddrValue=_useState4[0],setConnectedAddrValue=_useState4[1];var handleConnectMetamask=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var that,web3,network,accountFromMetaMask;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:that=_this;web3=new Web3(Web3.givenProvider||\"http://localhost:8545\");_context.next=4;return web3.eth.net.getNetworkType();case 4:network=_context.sent;_context.next=7;return window.ethereum.enable();case 7:_context.next=9;return web3.eth.getAccounts();case 9:accountFromMetaMask=_context.sent;console.log(accountFromMetaMask,\"account in app.js before set state\");setUserAccountAddress(accountFromMetaMask);setConnectedAddrValue(String(accountFromMetaMask).substr(0,5)+\"...\"+String(accountFromMetaMask).substr(38,4));console.log(userAccountAddress,\"user metamask address after set state\");case 14:case\"end\":return _context.stop();}}},_callee);}));return function handleConnectMetamask(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(DataContext.Provider,{value:{userAccountAddress:userAccountAddress},children:/*#__PURE__*/_jsxs(\"div\",{className:\"body-container\",children:[isMobile?\"\":/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"main\",{children:isMobile?/*#__PURE__*/_jsx(MobileDetected,{}):/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomeWrap,{})}),/*#__PURE__*/_jsx(Route,{path:\"/wrap\",element:/*#__PURE__*/_jsx(Wrap,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"/error\",element:/*#__PURE__*/_jsx(MobileDetected,{})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"metamask-addr-container\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-light mm\",onClick:handleConnectMetamask,children:[connectedAddrValue,/*#__PURE__*/_jsx(\"img\",{width:\"30\",height:\"30\",style:{float:\"left\",marginRight:5},src:\"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"})]})}),/*#__PURE__*/_jsx(Footer,{})]})});}export default App;","map":{"version":3,"sources":["/home/johanna/Desktop/weth-frontend/src/App.js"],"names":["Route","Routes","DataContext","isMobile","React","Component","useEffect","useState","Web3","HomeWrap","Wrap","About","MobileDetected","Navbar","Footer","MyContext","createContext","App","userAccountAddress","setUserAccountAddress","connectedAddrValue","setConnectedAddrValue","handleConnectMetamask","that","web3","givenProvider","eth","net","getNetworkType","network","window","ethereum","enable","getAccounts","accountFromMetaMask","console","log","String","substr","float","marginRight"],"mappings":"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","sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport {DataContext} from './DataContext';\n\n\nimport { isMobile } from \"react-device-detect\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport HomeWrap from \"./pages/HomeWrap\";\nimport Wrap from \"./pages/Wrap\";\n\nimport About from \"./pages/About\";\nimport MobileDetected from \"./pages/MobileDetected\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nconst MyContext = React.createContext();\n\n\nfunction App() {\n  const [userAccountAddress, setUserAccountAddress] = useState(\"\");\n  const [connectedAddrValue, setConnectedAddrValue] = useState(\"\");\n\n  const handleConnectMetamask = async () => {\n    let that = this;\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    await window.ethereum.enable();\n    //Fetch account data:\n    const accountFromMetaMask = await web3.eth.getAccounts();\n    console.log(accountFromMetaMask, \"account in app.js before set state\");\n    setUserAccountAddress(accountFromMetaMask);\n    setConnectedAddrValue(\n      String(accountFromMetaMask).substr(0, 5) +\n        \"...\" +\n        String(accountFromMetaMask).substr(38, 4)\n    );\n\n    console.log(userAccountAddress, \"user metamask address after set state\");\n  };\n\n  return (\n    <DataContext.Provider\n    value={{userAccountAddress: userAccountAddress}}>\n    <div className=\"body-container\">\n      {isMobile ? \"\" : <Navbar />}\n      <main >\n        {isMobile ? (\n          <MobileDetected />\n        ) : (\n          <Routes>\n            <Route path=\"/\" element={<HomeWrap />} />\n            <Route path=\"/wrap\" element={<Wrap />} />\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/error\" element={<MobileDetected />} />\n          </Routes>\n        )}\n      </main>\n      <div className=\"metamask-addr-container\">\n        <button className=\"btn btn-light mm\" onClick={handleConnectMetamask}>\n         {connectedAddrValue}\n          <img\n            width=\"30\"\n            height=\"30\"\n            style={{  float: \"left\", marginRight: 5}}\n            src=\"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"\n          ></img>\n        </button>\n     \n      </div>\n\n      <Footer />\n    </div>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}