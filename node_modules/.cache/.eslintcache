[{"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/index.js":"1","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/App.js":"2","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/DataContext.js":"3","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Home.js":"4","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/About.js":"5","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/MobileDetected.js":"6","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Vrf.js":"7","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Buy.js":"8","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Owner.js":"9","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/connectors.js":"10","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/Footer.js":"11","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/Navbar.js":"12","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/flashSuccess.js":"13","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/ErrorModal.js":"14","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/ButtonData.js":"15","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/config.js":"16","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/ConnectWalletModal.js":"17"},{"size":505,"mtime":1645907390187,"results":"18","hashOfConfig":"19"},{"size":2989,"mtime":1645966949620,"results":"20","hashOfConfig":"19"},{"size":87,"mtime":1645907390181,"results":"21","hashOfConfig":"19"},{"size":754,"mtime":1645918273728,"results":"22","hashOfConfig":"19"},{"size":504,"mtime":1645907390188,"results":"23","hashOfConfig":"19"},{"size":674,"mtime":1645967315813,"results":"24","hashOfConfig":"19"},{"size":6684,"mtime":1645907390189,"results":"25","hashOfConfig":"19"},{"size":9941,"mtime":1645918748917,"results":"26","hashOfConfig":"19"},{"size":6537,"mtime":1645907390188,"results":"27","hashOfConfig":"19"},{"size":952,"mtime":1645907390186,"results":"28","hashOfConfig":"19"},{"size":2513,"mtime":1645907390185,"results":"29","hashOfConfig":"19"},{"size":3583,"mtime":1645907390185,"results":"30","hashOfConfig":"19"},{"size":630,"mtime":1645907390186,"results":"31","hashOfConfig":"19"},{"size":1166,"mtime":1645907390184,"results":"32","hashOfConfig":"19"},{"size":841,"mtime":1645907390188,"results":"33","hashOfConfig":"19"},{"size":3933,"mtime":1645907390186,"results":"34","hashOfConfig":"19"},{"size":4107,"mtime":1645907390184,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"5gnx55",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":7,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/index.js",["82"],"import ReactDOM from \"react-dom\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Web3 from \"web3\";\n\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n",["83","84"],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/App.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/DataContext.js",[],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Home.js",["103","104"],"import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport asset from \"../assets/homeScreenImg.png\";\n\n\nconst Home = () => {\n\n  return (\n    <div class=\"container\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-xl-9 mx-auto\">\n            <br />\n            <br />\n            <h1 class=\"mb-5 flickerOn\">\n              the only electrical grid running on ethereum smart contracts, harnessing\n              the power of chainlink keepers\n            </h1>\n            <br />\n            <h4 class=\"flickerOn\"></h4>\n          </div>{\" \"}\n        </div>\n      </div>\n      <div class=\"row\" align=\"center\"></div>\n\n      <img src={asset} className={\"flickerOn\"} alt=\"\" width=\"800px\" />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/About.js",["105"],"import EthLogo from \"../assets/svg/eth_logo.svg\";\n\nconst About = () => {\n  return (\n    <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-5\">\n        <h1><br></br>\n          <b>About</b>\n        </h1>\n        <p>Submission for the ETH Denver Virtual Hackathon #BUIDL event</p>\n          <br></br>\n       </div>\n      <div class=\"col-6\">\n        <img src={EthLogo} style={{ width: \"40%\" }} />\n      </div>\n      <div class=\"col\"></div>\n    </div>\n  </div>\n  );\n};\n\nexport default About;\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/MobileDetected.js",["106"],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Vrf.js",["107","108"],"import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport FlashSuccess from \"../components/flashSuccess\";\n\n//const rpcURL = process.env.REACT_APP_rinkebyWebSocketSecureEventsInfuraAPIKey; //Use WSS to get live event data instead of polling constantly,\n// const rpcURL = \"wss://rinkeby.infura.io/ws/v3/f63336cd46ea40d68f1577991e1135cf\"\n//const web3 = new Web3(rpcURL);\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\nconst contractAddress_JS = \"0xD111A5E51034A17505f82547Ad3508EbCFc7c405\";\nconst contractABI_JS = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"have\", type: \"address\" },\n      { internalType: \"address\", name: \"want\", type: \"address\" },\n    ],\n    name: \"OnlyCoordinatorCanFulfill\",\n    type: \"error\",\n  },\n  { anonymous: false, inputs: [], name: \"lightShowUpdate\", type: \"event\" },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"requestId\", type: \"uint256\" },\n      { internalType: \"uint256[]\", name: \"randomWords\", type: \"uint256[]\" },\n    ],\n    name: \"rawFulfillRandomWords\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"requestRandomWords\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"twoRandomWords\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\nconst contractDefined_JS = new web3.eth.Contract(\n  contractABI_JS,\n  contractAddress_JS\n);\n\nexport default function Vrf({}) {\n  const [colorSet1, setColorSet1] = useState();\n  const [colorSet2, setColorSet2] = useState();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const { account } = useWeb3React();\n\n  let ArrayStorage = [];\n\n  async function updateLights() {\n    if (ArrayStorage.length === 0) {\n      for (let randomNumbers = 0; randomNumbers < 2; randomNumbers++) {\n        console.log(\"API CALL\");\n        await contractDefined_JS.methods\n          .twoRandomWords(randomNumbers)\n          .call((err, balance) => {\n            ArrayStorage.push((balance % 255) + 1);\n          });\n      }\n      console.log(ArrayStorage[0].toString(2));\n      setColorSet1(ArrayStorage[0]);\n      setColorSet2(ArrayStorage[1]);\n    }\n  }\n\n  console.log(\"Contract starting value:\");\n  updateLights();\n\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      const chainId = await web3.eth.getChainId();\n      console.log(chainId);\n      if (chainId !== 4) {\n        setErrorMsg(\"Must be on the Rinkeby test network\");\n        //Error message here\n      }\n\n      //Load the smart contract\n\n      eventListener();\n    };\n    loadBlockchainData();\n  }, []);\n\n  const eventListener = () => {\n    contractDefined_JS.events\n      .lightShowUpdate(\n        {\n          fromBlock: \"latest\",\n        },\n        function (error, eventResult) {}\n      )\n      .on(\"data\", function (eventResult) {\n        //Call the get function to get the most accurate present state for the value.\n\n        //Do a wait 30s here\n        console.log(\"eventlistner triggered!\");\n        window.location.reload();\n      })\n      .on(\"changed\", function (eventResult) {\n        // remove event from local database\n      })\n      .on(\"error\", console.error);\n  };\n\n  const handleRandomNrCall = () => {\n    console.log(account, \"account in BUY handle click\", contractAddress_JS);\n    try {\n      web3.eth\n        .sendTransaction({\n          to: contractAddress_JS,\n          data: contractDefined_JS.methods.requestRandomWords().encodeABI(),\n          from: account,\n        })\n        .then(() => {\n          console.log(\"vrf request sent\");\n          setSuccessMsg(\"VRF request sent!\");\n        });\n    } catch (err) {\n      const msg = \"Connect your wallet to buy\";\n      console.log(err, msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  const renderColorSetInColor = (colorSet) => {\n    var n = colorSet.toString(2);\n    n = \"00000000\".substr(n.length) + n;\n    let chars = Array.from(n);\n    console.log(chars);\n    return (\n      <>\n        <div\n          style={{\n            marginBottom: 50,\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div style={{ float: \"left\" }}>\n            <p className=\"vrf-numbers color-white\">{chars[0]}</p>\n            <p className=\"vrf-numbers color-pink\">{chars[1]}</p>\n            <p className=\"vrf-numbers color-orange\">{chars[2]}</p>\n            <p className=\"vrf-numbers color-purple\">{chars[3]}</p>\n            <p className=\"vrf-numbers color-green\">{chars[4]}</p>\n            <p className=\"vrf-numbers color-yellow\">{chars[5]}</p>\n            <p className=\"vrf-numbers color-blue\">{chars[6]}</p>\n            <p className=\"vrf-numbers color-red\">{chars[7]}</p>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <h1>\n          <br></br>\n          chainlink VRF v2 \n        </h1>\n        <div style={{marginBottom: 50}}>\n        <button\n          style={{ width: 400 }}\n          className=\"btn-hover color-electric\"\n          onClick={() => handleRandomNrCall()}\n        >\n          Request 2 random VRF v2 numbers\n        </button>\n        </div>\n        {colorSet1 && colorSet2 ? (\n          <div>\n            <p>\n              first color set \n              &nbsp;&nbsp;&nbsp;\n             <b>{colorSet1}</b> \n              &nbsp;&nbsp;&nbsp;\n              {renderColorSetInColor(colorSet1)}\n            </p>\n            <p>\n              second color set \n              &nbsp;&nbsp;&nbsp;\n              <b>{colorSet2}</b> \n\n              &nbsp;&nbsp;&nbsp;\n              {/* {colorSet2.toString(2)} */}\n              {renderColorSetInColor(colorSet2)}\n            </p>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {/* <p><b></b>{colorSet2}</p> */}\n        <p></p>\n        <br></br>\n      </div>\n      {errorMsg !== \"\" ? (\n        <ErrorModal\n          showToastFromProp={errorMsg !== \"\"}\n          onClose={() => setErrorMsg(\"\")}\n          errorMsg={errorMsg}\n        ></ErrorModal>\n      ) : null}\n\n      <p style={{ color: \"white\" }}>{successMsg}</p>\n\n      {successMsg ? (\n        <FlashSuccess show msg={successMsg} onClose={() => setSuccessMsg(\"\")} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Buy.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import EthLogo from \"../assets/svg/eth_logo.svg\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport {\n  ABI,\n  CONTRACT_ADDRESS,\n  ELECTRICKEEPER_ABI,\n  ELECTRICKEEPER_CONTRACT_ADDRESS,\n  BUY_DEMO_EIGHT_MINUTES_ABI,\n  BUY_DEMO_EIGHT_MINUTES_CONTRACT_ADDRESS,\n} from \"../config\";\nimport { BUTTON_OBJECT_4_LAST, BUTTON_OBJECT_4_FIRST } from \"./ButtonData\";\nimport ErrorModal from \"../components/ErrorModal\";\nimport FlashSuccess from \"../components/flashSuccess\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\n\nimport { DataContext } from \"../DataContext\";\n\n//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nexport default function Buy({ degree, userLocation, basic }) {\n  const [maticPriceFeedContract, setMaticPriceFeedContract] = useState(null);\n  const [electricKeeperContract, setElectricKeeperContract] = useState(null);\n  const [buyDemoEightMinutesContract, setBuyDemoEightMinutesContract] =\n    useState(null);\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [latestPriceOfMatic_1p, setLatestPriceOfMatic_1p] = useState(\"\");\n  const [showToast, setShowToast] = useState();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const [\n    voltageExpirationAndLatestBuyerObject,\n    setVoltageExpirationAndLatestBuyerObject,\n  ] = useState({});\n\n  const { userAccountAddress, setUserAccountAddress } =\n    React.useContext(DataContext);\n\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n      const chainId = await web3.eth.getChainId();\n      console.log(chainId);\n      if (chainId !== 80001) {\n        setErrorMsg(\"Must be on the Mumbai test network\");\n      }\n\n      //Load the smart contract(s)\n      const maticPriceFeedContract = new web3.eth.Contract(\n        ABI,\n        CONTRACT_ADDRESS\n      );\n      const electricKeeperContract = new web3.eth.Contract(\n        ELECTRICKEEPER_ABI,\n        ELECTRICKEEPER_CONTRACT_ADDRESS\n      );\n      const buyDemoEightMinutesContract = new web3.eth.Contract(\n        BUY_DEMO_EIGHT_MINUTES_ABI,\n        BUY_DEMO_EIGHT_MINUTES_CONTRACT_ADDRESS\n      );\n      //Save smart contract(s) in react state\n      setElectricKeeperContract(electricKeeperContract);\n      setMaticPriceFeedContract(maticPriceFeedContract);\n      setBuyDemoEightMinutesContract(buyDemoEightMinutesContract);\n\n      console.log(buyDemoEightMinutesContract, \"This is DEMO contract\");\n\n      if (account) {\n        let voltageExpirationAndLatestBuyerObject =\n          await electricKeeperContract.methods.LED(account).call();\n\n        setVoltageExpirationAndLatestBuyerObject(\n          voltageExpirationAndLatestBuyerObject\n        );\n        console.log(voltageExpirationAndLatestBuyerObject, \"VOOOOLT OBJ\");\n        console.log(\n          \"ONLY one expir\",\n          voltageExpirationAndLatestBuyerObject.ExpirationTimeUNIX\n        );\n      }\n\n      if (maticPriceFeedContract !== null) {\n        maticPriceFeedContract.methods\n          .getLatestPrice()\n          .call()\n          .then((data) => {\n            setLatestPriceOfMatic_1p(web3.utils.fromWei(data));\n            console.log(data);\n            console.log(web3.utils.fromWei(data));\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    loadBlockchainData();\n  }, [account]);\n\n  const estimatedMatic = () => {\n    return latestPriceOfMatic_1p && inputAmount !== \"\"\n      ? (latestPriceOfMatic_1p * (10 * inputAmount)).toFixed(3).toString()\n      : \"0\";\n  };\n\n  const colorNumberToColor = (colorNumber) => {\n    switch (colorNumber) {\n      case 0:\n        return \"blue\";\n        break;\n      case 1:\n        return \"green\";\n        break;\n      case 2:\n        return \"yellow\";\n        break;\n      case 3:\n        return \"red\";\n        break;\n      case 4:\n        return \"orange\";\n        break;\n      case 5:\n        return \"purple\";\n        break;\n      case 6:\n        return \"grey\";\n        break;\n      case 7:\n        return \"white\";\n        break;\n      default:\n        console.log(\"not a valid num\");\n    }\n  };\n\n  const handleBuyButtonClick = (colorNumber) => {\n    console.log(\"You chose the color:\", colorNumber);\n    console.log(account, \"account in BUY handle click\");\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n      let amountOfMaticToPay = estimatedMatic();\n      console.log(amountOfMaticToPay);\n      web3.eth\n        .sendTransaction({\n          to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n          data: electricKeeperContract.methods\n            .BuyElectricityTimeOn(\n              colorNumber,\n              web3.utils.toWei(amountOfMaticToPay)\n            )\n            .encodeABI(),\n          value: web3.utils.toWei(amountOfMaticToPay),\n          from: account,\n        })\n        .then(() => {\n          setSuccessMsg(\n            `Bought ${\n              inputAmount === \"1\" ? \"1\" + \" min\" : inputAmount + \" mins\"\n            } of electricity \n          for the ${colorNumberToColor(colorNumber)} LED`\n          );\n        });\n    } catch (err) {\n      const msg = \"Connect your wallet to buy\";\n      console.log(err, msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  const handleBuyDemoEightMinutes = () => {\n    console.log(buyDemoEightMinutesContract, \"account in BUY handle click\");\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n      let amountOfMaticToPay = estimatedMatic();\n      console.log(amountOfMaticToPay);\n      web3.eth\n        .sendTransaction({\n          to: BUY_DEMO_EIGHT_MINUTES_CONTRACT_ADDRESS,\n          data: buyDemoEightMinutesContract.methods\n            .BuyTestEightMinuteCountdown()\n            .encodeABI(),\n          value: 36,\n          from: account,\n        })\n        .then(() => {\n          setSuccessMsg(\"8 Minute Demo Starting!\");\n        });\n    } catch (err) {\n      const msg = \"Connect your wallet to buy\";\n      console.log(err, msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  const renderInputBox = () => {\n    return (\n      <>\n        <div\n          style={{\n            marginBottom: 150,\n            marginTop: 50,\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"50%\" }}\n          >\n            <label\n              style={{\n                color: \"#ffdd9a\",\n                marginRight: \"20px\",\n                fontSize: \"13px\",\n              }}\n              htmlFor=\"minutes\"\n            >\n              price: $0.10/minute\n            </label>\n            <input\n              type=\"number\"\n              class=\"input-matic\"\n              min=\"0\"\n              step=\"1\"\n              placeholder=\"enter amount of minutes\"\n              data-name=\"minutes\"\n              value={inputAmount}\n              onChange={(e) => setInputAmount(e.target.value)}\n              style={{ width: \"100%\" }}\n            ></input>\n          </div>\n          <br />\n          <label\n            style={{\n              color: \"#ffdd9a\",\n              fontSize: \"13px\",\n            }}\n            htmlFor=\"minutes\"\n          >\n            pick LED color to buy\n          </label>\n          <div style={{ width: \"80%\" }}>\n            {BUTTON_OBJECT_4_FIRST.map((i) => (\n              <button\n                className={i.styleClass}\n                onClick={() => handleBuyButtonClick(i.buttonClickValue)}\n              >\n                {i.title}\n              </button>\n            ))}\n            <br></br>\n            {BUTTON_OBJECT_4_LAST.map((i) => (\n              <button\n                className={i.styleClass}\n                onClick={() => handleBuyButtonClick(i.buttonClickValue)}\n              >\n                {i.title}\n              </button>\n            ))}\n          </div>\n          <br />\n          <p>\n            <b>Amount: </b> &nbsp;&nbsp;&nbsp;&nbsp; ≈ &nbsp; {estimatedMatic()}{\" \"}\n            matic\n          </p>\n          <button\n            style={{ width: 400 }}\n            className=\"btn-hover color-electric\"\n            onClick={() => handleBuyDemoEightMinutes()}\n          >\n            buy 8 minute demo\n          </button>\n          <p>\n            Expiration time:{\" \"}\n            {voltageExpirationAndLatestBuyerObject.ExpirationTimeUNIX}\n            <b></b>\n            <b></b>\n          </p>\n          {/* <p>\n            {\" \"}\n            Latest Buyer: {voltageExpirationAndLatestBuyerObject.LatestBuyer}\n            <b></b>\n          </p> */}\n          <p>\n            {\" \"}\n            Voltage: {voltageExpirationAndLatestBuyerObject.Voltage}\n            <b></b>\n          </p>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div>\n          <h1>\n            <br></br>\n            buy electricity\n          </h1>\n          <p>enter the amount of minutes of electricity you want to buy </p>\n          <div className=\"row\">{renderInputBox()}</div>\n        </div>\n      </div>\n      {errorMsg !== \"\" ? (\n        <ErrorModal\n          showToastFromProp={errorMsg !== \"\"}\n          onClose={() => setErrorMsg(\"\")}\n          errorMsg={errorMsg}\n        ></ErrorModal>\n      ) : null}\n\n      {successMsg ? (\n        <FlashSuccess show msg={successMsg} onClose={() => setSuccessMsg(\"\")} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/Owner.js",["126","127","128","129","130","131"],"import React, { Component, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\n\nimport ErrorModal from \"../components/ErrorModal\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport {\n  DOMINO_CONTRACT_ADDRESS,\n  DOMINO_CONTRACT_ABI,\n  ELECTRICKEEPER_ABI,\n  ELECTRICKEEPER_CONTRACT_ADDRESS,\n} from \"../config\";\n\nimport { DataContext } from \"../DataContext\";\n\n//TODO: add ErrorModal\n//MetaMask wallet shown/button if connect\n//Dropdown for network switch statements\n\nexport default function Owner({}) {\n  const [dominoContract, setDominoContract] = useState(null);\n  const [electricKeeperContract, setElectricKeeperContract] = useState(null);\n\n  const [LEDValue, setLEDValue] = useState();\n  const [expirationOccurred, setExpirationOccurred] = useState();\n\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const { userAccountAddress, setUserAccountAddress } =\n    React.useContext(DataContext);\n\n  const { account } = useWeb3React();\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    }\n    const loadBlockchainData = async () => {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n      //const network = await web3.eth.net.getNetworkType();\n      //await window.ethereum.enable();\n      //const addressFromMetamask = await web3.eth.getAccounts();\n      const chainId = await web3.eth.getChainId();\n      console.log(chainId);\n      if (chainId !== 80001) {\n        setErrorMsg(\"Must be on the Mumbai test network\");\n      }\n\n      //Load the smart contract\n      const dominoContract = new web3.eth.Contract(\n        DOMINO_CONTRACT_ABI,\n        DOMINO_CONTRACT_ADDRESS\n      );\n      const electricKeeperContract = new web3.eth.Contract(\n        ELECTRICKEEPER_ABI,\n        ELECTRICKEEPER_CONTRACT_ADDRESS\n      );\n      setDominoContract(dominoContract);\n      setElectricKeeperContract(electricKeeperContract);\n\n      console.log(electricKeeperContract, \"This is electric contract\");\n\n      if (electricKeeperContract !== null) {\n        electricKeeperContract.methods\n          .expirationOccured()\n          .call()\n          .then((data) => {\n            console.log(data, \"EXPIRATION OCC??????\");\n            setExpirationOccurred(data);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    };\n    loadBlockchainData();\n  }, [account]);\n\n  useEffect(() => {}, []);\n\n  const handleManualExpirationOff = () => {\n    try {\n      let web3 = new Web3(window.web3.currentProvider);\n\n      web3.eth.sendTransaction({\n        to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n        data: electricKeeperContract.methods\n          .OwnerManualExpirationOff()\n          .encodeABI(),\n        from: account,\n      });\n    } catch (err) {\n      const msg = \"Connect your wallet to buy\";\n      console.log(err, msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  const handleEmergencySafeAndDangerOffAndOn = (ledValue, safeOrDanger) => {\n    console.log(ledValue, \"ledvaaaaaaaal\");\n    if (ledValue >= 0 && ledValue <= 7) {\n      var functionToCall;\n      if (safeOrDanger === \"safe\") {\n        functionToCall = electricKeeperContract.methods\n          .OwnerEmergencySafeOn(ledValue)\n          .encodeABI();\n      } else {\n        functionToCall = electricKeeperContract.methods\n          .OwnerEmergencyDangerOff(ledValue)\n          .encodeABI();\n      }\n      try {\n        let web3 = new Web3(window.web3.currentProvider);\n\n        web3.eth.sendTransaction({\n          to: ELECTRICKEEPER_CONTRACT_ADDRESS,\n          data: functionToCall,\n          from: account,\n        });\n      } catch (err) {\n        const msg = \"Connect your wallet to buy\";\n        console.log(err, msg);\n        setErrorMsg(msg);\n      }\n    } else {\n      const msg = \"You need to put an LED value between 0-7\";\n      console.log(msg);\n      setErrorMsg(msg);\n    }\n  };\n\n  //READ/GET value only:expirationOccured();\n\n  const renderButton = () => {\n    return (\n      <>\n        <div\n          style={{\n            marginBottom: 150,\n            marginTop: 50,\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <label\n            style={{\n              color: \"#ffdd9a\",\n              marginRight: \"20px\",\n              fontSize: \"13px\",\n            }}\n            htmlFor=\"minutes\"\n          >\n            did expiration occur: {expirationOccurred ? \"true\" : \"false\"}\n          </label>\n          <button\n            style={{ width: 400 }}\n            className=\"btn-hover color-electric\"\n            onClick={() => handleManualExpirationOff()}\n          >\n            manual expiration off\n          </button>{\" \"}\n          <label\n            style={{\n              color: \"#ffdd9a\",\n              marginRight: \"20px\",\n              fontSize: \"13px\",\n            }}\n            htmlFor=\"minutes\"\n          >\n            pick LED value:\n          </label>\n          <input\n            type=\"number\"\n            class=\"input-matic\"\n            min=\"0\"\n            step=\"1\"\n            placeholder=\"enter LED number\"\n            data-name=\"minutes\"\n            value={LEDValue}\n            onChange={(e) => setLEDValue(e.target.value)}\n            style={{ width: \"400px\" }}\n          ></input>\n          <button\n            style={{ width: 400 }}\n            className=\"btn-hover color-electric\"\n            onClick={() =>\n              handleEmergencySafeAndDangerOffAndOn(LEDValue, \"safe\")\n            }\n          >\n            emergency safe on\n          </button>{\" \"}\n          <button\n            style={{ width: 400 }}\n            className=\"btn-hover color-electric\"\n            onClick={() =>\n              handleEmergencySafeAndDangerOffAndOn(LEDValue, \"danger\")\n            }\n          >\n            emergency danger off\n          </button>\n        </div>\n        <br />\n      </>\n    );\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"row\">\n        <div>\n          <h1>\n            <br></br>\n            owner\n          </h1>\n          <p>request 8 minute LED countdown</p>\n          <div className=\"row\">{renderButton()}</div>\n        </div>\n      </div>\n      {errorMsg !== \"\" ? (\n        <ErrorModal\n          showToastFromProp={errorMsg !== \"\"}\n          onClose={() => setErrorMsg(\"\")}\n          errorMsg={errorMsg}\n        ></ErrorModal>\n      ) : null}\n    </div>\n  );\n}\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/connectors.js",[],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/Footer.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import { NavLink } from \"react-router-dom\";\nimport { faGift } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"react-router-dom\";\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\nimport { faBolt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"container\">\n        <div class=\"link-boxes\">\n          <ul class=\"box\">\n            <li class=\"link_name\">electricKeeper</li>\n            <li>\n              <img width=\"20%\" src={EthLogo} />\n            </li>\n          </ul>\n          <ul class=\"box\">\n            <li class=\"link_name\">hackathon</li>\n            <li>\n              <a href=\"https://www.ethdenver.com/\" target=\"_blank\">\n                eth denver 2022\n              </a>\n            </li>\n          </ul>\n          <ul class=\"box\">\n            <li class=\"link_name\">team</li>\n            <li>\n              <a\n                href=\"https://www.linkedin.com/in/marcus-wentz-a91351102/\"\n                target=\"_blank\"\n              >\n                marcus\n              </a>\n            </li>\n            <li>\n              {\" \"}\n              <a\n                href=\"https://github.com/MarcusWentz/ElectricKeeper/graphs/contributors\"\n                target=\"_blank\"\n              >\n                jonathan\n              </a>\n            </li>\n            <li>\n              {\" \"}\n              <a\n                href=\"https://github.com/MarcusWentz/ElectricKeeper/graphs/contributors\"\n                target=\"_blank\"\n              >\n                kieran\n              </a>\n            </li>\n            <li>\n              {\" \"}\n              <a\n                href=\"https://www.linkedin.com/in/franssonjohanna/\"\n                target=\"_blank\"\n              >\n                johanna\n              </a>\n            </li>\n          </ul>\n\n          <ul class=\"box\">\n            <li class=\"link_name\">social</li>\n            <li>\n              <a\n                target=\"_blank\"\n                href=\"https://github.com/MarcusWentz/ElectricKeeper\"\n              >\n                github\n              </a>\n            </li>\n            <li>\n              <a target=\"_blank\" href=\"https://discord.gg/sporkdao\">\n                discord\n              </a>\n            </li>\n            <li>\n              <a href=\"#\"></a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/Navbar.js",["147","148","149","150","151","152","153","154","155","156","157","158","159"],"import { NavLink } from \"react-router-dom\";\nimport { faBolt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DataContext } from \"../DataContext\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport classes from \"./Navbar.module.css\";\nimport ConnectWalletModal from \"./ConnectWalletModal\";\nimport EthLogo from \"../assets/svg/eth_logo.svg\";\n\nconst Navbar = ({ handleConnectMetamask, connectedAddrValue }) => {\n  const { userAccountAddress, setUserAccountAddress } =\n    React.useContext(DataContext);\n  const [showModal, setShowModal] = useState(false);\n\n  const { active, account, library, connector, activate, deactivate } =\n    useWeb3React();\n  const shortAddress = account\n    ? String(account).substr(0, 5) + \"...\" + String(account).substr(38, 4)\n    : \"\";\n\n  return (\n    <header className={classes.header}>\n      <ConnectWalletModal\n        onClose={() => setShowModal(false)}\n        showToastFromProp={showModal}\n      ></ConnectWalletModal>\n      <nav class=\"navbar\">\n        <div style={{ fontSize: \"xx-large\", marginRight: \"50px\" }}>\n          <div class=\"h-screen flex justify-center items-center bg-gray-800\">\n            <h1 class=\"gradient-text font-sans font-black text-6xl\">\n              <img width=\"6%\" src={EthLogo} />{\" \"}\n              <NavLink\n              to=\"/\"\n            >\n               electricKeeper\n            </NavLink>            </h1>\n          </div>\n        </div>\n        <ul id=\"ul-navigation\" class=\"nav-ul\" data-visible=\"false\">\n          <li class=\"nav-li\">\n            <NavLink\n              className={(navObj) => (navObj.isActive ? classes.active : \"\")}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n          </li>\n          <li class=\"nav-li\">\n            <NavLink\n              className={(navObj) => (navObj.isActive ? classes.active : \"\")}\n              to=\"/buy\"\n            >\n              Buy\n            </NavLink>{\" \"}\n          </li>\n          {/*    <li class=\"nav-li\">\n            <NavLink\n              className={(navObj) => (navObj.isActive ? classes.active : \"\")}\n              to=\"/about\"\n            >\n              About\n            </NavLink>\n          </li> */}\n          <li class=\"nav-li\">\n            <NavLink\n              className={(navObj) => (navObj.isActive ? classes.active : \"\")}\n              to=\"/owner\"\n            >\n              owner\n            </NavLink>\n          </li>\n          <li class=\"nav-li\">\n            <NavLink\n              className={(navObj) => (navObj.isActive ? classes.active : \"\")}\n              to=\"/vrf\"\n            >\n              lightshow\n            </NavLink>\n          </li>\n          <li class=\"nav-li\">\n            <a className={(navObj) => (navObj.isActive ? classes.active : \"\")}>\n              <button\n                className=\"btn btn-light mm\"\n                onClick={() => setShowModal(true)}\n              >\n                {/*    <img\n                  width=\"30\"\n                  height=\"30\"\n                  style={{ marginRight: 5 }}\n                  src=\"\"\n                ></img> */}\n\n                {shortAddress !== \"\" ? shortAddress : \"Connect a wallet\"}\n              </button>\n            </a>\n          </li>\n        </ul>\n        <button\n          class=\"mobile-toggle\"\n          aria-controls=\"ul-navigation\"\n          aria-expanded=\"false\"\n        >\n          <span class=\"sr-only\">Menu</span>\n        </button>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/flashSuccess.js",["160","161"],"import React, {useEffect, useState} from 'react';\nimport styles from \"./flashSuccess.module.css\";\n\nexport default function FlashSuccess({show, onClose, msg}) {\n  const [showFlash, setShowFlash] = useState();\n\n  useEffect(() => {\n    setTimeout(() => {\n      console.log(\"timout\");\n      onClose()\n    }, 7000)\n  }, [showFlash]);\n\n  useEffect(() => {\n    if (show) {\n      setShowFlash(true);\n    }\n  }, [])\n\n  return (\n    showFlash ? (\n    <div className={styles.flashSuccess}>\n      <h2 className={styles.title}>\n        Success\n      </h2>\n      <p style={{padding: \"5px 6px\"}}>\n        {msg}\n      </p>\n    </div>) : \"\"\n  )\n}\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/ErrorModal.js",["162","163"],"import { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\n\nexport default function ErrorModal({ showToastFromProp, errorMsg, onClose }) {\n  const [showToast, setShowToast] = useState(false);\n\n  const _closeToast = () => {\n    setShowToast(false);\n    onClose();\n  };\n\n  const _openToast = () => {};\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowToast(true);\n      } else if (!showToastFromProp) {\n        setShowToast(false);\n      }\n    };\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const _renderInviteToast = () => {\n    console.log(showToast, \"showtoast t or f?\");\n\n    return (\n      <div className=\"module-border-wrap\">\n        <Modal\n          show={showToast}\n          onHide={_closeToast}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header>Warning</Modal.Header>\n          <Modal.Body>\n            <div className=\"inv-toast-body\">{errorMsg}</div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  };\n  return <div> {_renderInviteToast()}</div>;\n}\n","/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/pages/ButtonData.js",[],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/config.js",[],"/Users/kieranwilliams/Programming/hackathon/ElectricalEthereum/src/components/ConnectWalletModal.js",["164","165","166","167","168","169","170","171","172","173"],"import { Modal } from \"react-bootstrap\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport \"./ConnectWalletModal.css\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport {\n  injected,\n  walletconnect,\n  resetWalletConnector,\n  walletlink,\n} from \"./connectors\";\n\nimport {DataContext} from \"../DataContext\";\n\nexport default function ConnectWalletModal({\n  showToastFromProp,\n  errorMsg,\n  onClose,\n}) {\n  const [showModal, setShowModal] = useState();\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate,\n    web3reactContext,\n  } = useWeb3React();\n  const web3 = useWeb3React();\n  const shortAddress = account\n    ? String(account).substr(0, 5) + \"...\" + String(account).substr(38, 4)\n    : \"\";\n\n  const _closeModal = () => {\n    setShowModal(false);\n    onClose();\n  };\n\n  const handleConnect = () => {\n    try {\n      web3.activate(injected, undefined, true).catch(err => window.location.reload());\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const connectWalletConnectSimple = async () => {\n    try {\n      resetWalletConnector(walletconnect);\n      await activate(walletconnect);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  const connectCoinbaseSimple = async () => {\n    try {\n      await web3.activate(walletlink);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  useEffect(() => {\n    const updateStateIfPropChanges = async () => {\n      if (showToastFromProp) {\n        setShowModal(true);\n      } else if (!showToastFromProp) {\n        setShowModal(false);\n      }\n    };\n    updateStateIfPropChanges();\n  }, [showToastFromProp]);\n\n  const renderConnectWalletModal = () => {\n    console.log(showModal, \"showtoast t or f?\");\n    return (\n      <Modal show={showToastFromProp} onHide={_closeModal}>\n        <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n          <Modal.Title>\n            <p>connect a wallet</p>\n          </Modal.Title>\n        </div>\n        <Modal.Body>\n          <div className=\"col-md-12\"></div>\n          <div>\n            <p className=\"short-address-modal\">\n              {\" \"}\n              {account ? shortAddress : \" \"}\n            </p>\n\n            <button class=\"btn-hover color-electric\" onClick={handleConnect}>\n              <img\n                width=\"30\"\n                height=\"30\"\n                style={{ marginRight: 20 }}\n                src=\"https://cdn.discordapp.com/attachments/908513230714982410/913132016365633596/aaaaa.png\"\n                alt=\"metamask\"\n              ></img>\n              MetaMask\n            </button>\n            <pre></pre>\n            <div>\n              <button\n                class=\"btn-hover color-electric\"\n                onClick={connectCoinbaseSimple}\n              >\n                <img\n                  width=\"30\"\n                  height=\"30\"\n                  style={{ marginRight: 20 }}\n                  // src=\"https://cdn.freelogovectors.net/wp-content/uploads/2021/12/coinbase-logo-freelogovectors.net_.png\n                  // \"\n                  src=\"https://cdn.discordapp.com/attachments/939936820051968000/945443349186347048/18060234.png\"\n                  alt=\"coinbase wallet\"\n                ></img>\n                Coinbase Wallet\n              </button>\n              <pre></pre>\n            </div>\n            <div>\n              <button\n                class=\"btn-hover color-electric\"\n                onClick={connectWalletConnectSimple}\n              >\n                <img\n                  width=\"30\"\n                  height=\"30\"\n                  style={{ marginRight: 20 }}\n                  src=\"https://docs.walletconnect.com/img/walletconnect-logo.svg\"\n                  alt=\"walletconnect\"\n                ></img>\n                WalletConnect\n              </button>\n              <pre></pre>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  };\n  return <div> {renderConnectWalletModal()}</div>;\n}\n",{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":23},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"174","severity":1,"message":"182","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":27},{"ruleId":"174","severity":1,"message":"183","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":27},{"ruleId":"174","severity":1,"message":"184","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":22},{"ruleId":"174","severity":1,"message":"185","line":8,"column":17,"nodeType":"176","messageId":"177","endLine":8,"endColumn":26},{"ruleId":"174","severity":1,"message":"186","line":8,"column":28,"nodeType":"176","messageId":"177","endLine":8,"endColumn":37},{"ruleId":"174","severity":1,"message":"187","line":22,"column":3,"nodeType":"176","messageId":"177","endLine":22,"endColumn":16},{"ruleId":"174","severity":1,"message":"188","line":23,"column":3,"nodeType":"176","messageId":"177","endLine":23,"endColumn":23},{"ruleId":"174","severity":1,"message":"189","line":27,"column":7,"nodeType":"176","messageId":"177","endLine":27,"endColumn":16},{"ruleId":"174","severity":1,"message":"190","line":33,"column":11,"nodeType":"176","messageId":"177","endLine":33,"endColumn":17},{"ruleId":"174","severity":1,"message":"191","line":33,"column":19,"nodeType":"176","messageId":"177","endLine":33,"endColumn":26},{"ruleId":"174","severity":1,"message":"192","line":33,"column":28,"nodeType":"176","messageId":"177","endLine":33,"endColumn":35},{"ruleId":"174","severity":1,"message":"193","line":33,"column":37,"nodeType":"176","messageId":"177","endLine":33,"endColumn":46},{"ruleId":"174","severity":1,"message":"194","line":33,"column":48,"nodeType":"176","messageId":"177","endLine":33,"endColumn":56},{"ruleId":"174","severity":1,"message":"195","line":33,"column":58,"nodeType":"176","messageId":"177","endLine":33,"endColumn":68},{"ruleId":"174","severity":1,"message":"196","line":37,"column":9,"nodeType":"176","messageId":"177","endLine":37,"endColumn":22},{"ruleId":"174","severity":1,"message":"197","line":45,"column":9,"nodeType":"176","messageId":"177","endLine":45,"endColumn":30},{"ruleId":"174","severity":1,"message":"198","line":54,"column":9,"nodeType":"176","messageId":"177","endLine":54,"endColumn":13},{"ruleId":"174","severity":1,"message":"199","line":56,"column":11,"nodeType":"176","messageId":"177","endLine":56,"endColumn":18},{"ruleId":"174","severity":1,"message":"200","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":19,"column":13,"nodeType":"203","endLine":19,"endColumn":35},{"ruleId":"204","severity":1,"message":"205","line":15,"column":9,"nodeType":"203","endLine":15,"endColumn":55},{"ruleId":"204","severity":1,"message":"205","line":19,"column":13,"nodeType":"203","endLine":19,"endColumn":60},{"ruleId":"174","severity":1,"message":"200","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":54,"column":29,"nodeType":"208","messageId":"209","endLine":54,"endColumn":31},{"ruleId":"174","severity":1,"message":"200","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":15},{"ruleId":"174","severity":1,"message":"185","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":26},{"ruleId":"174","severity":1,"message":"182","line":15,"column":10,"nodeType":"176","messageId":"177","endLine":15,"endColumn":27},{"ruleId":"174","severity":1,"message":"210","line":24,"column":10,"nodeType":"176","messageId":"177","endLine":24,"endColumn":32},{"ruleId":"174","severity":1,"message":"211","line":30,"column":10,"nodeType":"176","messageId":"177","endLine":30,"endColumn":19},{"ruleId":"174","severity":1,"message":"212","line":30,"column":21,"nodeType":"176","messageId":"177","endLine":30,"endColumn":33},{"ruleId":"174","severity":1,"message":"213","line":38,"column":11,"nodeType":"176","messageId":"177","endLine":38,"endColumn":29},{"ruleId":"174","severity":1,"message":"214","line":38,"column":31,"nodeType":"176","messageId":"177","endLine":38,"endColumn":52},{"ruleId":"215","severity":1,"message":"216","line":124,"column":9,"nodeType":"217","messageId":"218","endLine":124,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":127,"column":9,"nodeType":"217","messageId":"218","endLine":127,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":130,"column":9,"nodeType":"217","messageId":"218","endLine":130,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":133,"column":9,"nodeType":"217","messageId":"218","endLine":133,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":136,"column":9,"nodeType":"217","messageId":"218","endLine":136,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":139,"column":9,"nodeType":"217","messageId":"218","endLine":139,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":142,"column":9,"nodeType":"217","messageId":"218","endLine":142,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":145,"column":9,"nodeType":"217","messageId":"218","endLine":145,"endColumn":15},{"ruleId":"219","severity":1,"message":"220","line":173,"column":41,"nodeType":"221","messageId":"222","endLine":173,"endColumn":42},{"ruleId":"174","severity":1,"message":"185","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"182","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":27},{"ruleId":"206","severity":1,"message":"207","line":19,"column":31,"nodeType":"208","messageId":"209","endLine":19,"endColumn":33},{"ruleId":"174","severity":1,"message":"223","line":20,"column":10,"nodeType":"176","messageId":"177","endLine":20,"endColumn":24},{"ruleId":"174","severity":1,"message":"213","line":27,"column":11,"nodeType":"176","messageId":"177","endLine":27,"endColumn":29},{"ruleId":"174","severity":1,"message":"214","line":27,"column":31,"nodeType":"176","messageId":"177","endLine":27,"endColumn":52},{"ruleId":"174","severity":1,"message":"224","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":17},{"ruleId":"174","severity":1,"message":"225","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"226","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},{"ruleId":"174","severity":1,"message":"227","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":14},{"ruleId":"174","severity":1,"message":"228","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":18,"column":15,"nodeType":"203","endLine":18,"endColumn":48},{"ruleId":"229","severity":1,"message":"230","line":24,"column":15,"nodeType":"203","messageId":"231","endLine":24,"endColumn":68,"fix":"232"},{"ruleId":"229","severity":1,"message":"230","line":32,"column":15,"nodeType":"203","messageId":"231","endLine":35,"endColumn":16,"fix":"233"},{"ruleId":"229","severity":1,"message":"230","line":41,"column":15,"nodeType":"203","messageId":"231","endLine":44,"endColumn":16,"fix":"234"},{"ruleId":"229","severity":1,"message":"230","line":50,"column":15,"nodeType":"203","messageId":"231","endLine":53,"endColumn":16,"fix":"235"},{"ruleId":"229","severity":1,"message":"230","line":59,"column":15,"nodeType":"203","messageId":"231","endLine":62,"endColumn":16,"fix":"236"},{"ruleId":"229","severity":1,"message":"230","line":71,"column":15,"nodeType":"203","messageId":"231","endLine":74,"endColumn":16,"fix":"237"},{"ruleId":"229","severity":1,"message":"230","line":79,"column":15,"nodeType":"203","messageId":"231","endLine":79,"endColumn":69,"fix":"238"},{"ruleId":"239","severity":1,"message":"240","line":84,"column":15,"nodeType":"203","endLine":84,"endColumn":27},{"ruleId":"241","severity":1,"message":"242","line":84,"column":15,"nodeType":"203","endLine":84,"endColumn":27},{"ruleId":"174","severity":1,"message":"228","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"226","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},{"ruleId":"174","severity":1,"message":"185","line":5,"column":17,"nodeType":"176","messageId":"177","endLine":5,"endColumn":26},{"ruleId":"174","severity":1,"message":"186","line":5,"column":28,"nodeType":"176","messageId":"177","endLine":5,"endColumn":37},{"ruleId":"174","severity":1,"message":"213","line":12,"column":11,"nodeType":"176","messageId":"177","endLine":12,"endColumn":29},{"ruleId":"174","severity":1,"message":"214","line":12,"column":31,"nodeType":"176","messageId":"177","endLine":12,"endColumn":52},{"ruleId":"174","severity":1,"message":"190","line":16,"column":11,"nodeType":"176","messageId":"177","endLine":16,"endColumn":17},{"ruleId":"174","severity":1,"message":"192","line":16,"column":28,"nodeType":"176","messageId":"177","endLine":16,"endColumn":35},{"ruleId":"174","severity":1,"message":"193","line":16,"column":37,"nodeType":"176","messageId":"177","endLine":16,"endColumn":46},{"ruleId":"174","severity":1,"message":"194","line":16,"column":48,"nodeType":"176","messageId":"177","endLine":16,"endColumn":56},{"ruleId":"174","severity":1,"message":"195","line":16,"column":58,"nodeType":"176","messageId":"177","endLine":16,"endColumn":68},{"ruleId":"204","severity":1,"message":"205","line":32,"column":15,"nodeType":"203","endLine":32,"endColumn":47},{"ruleId":"241","severity":1,"message":"243","line":82,"column":13,"nodeType":"203","endLine":82,"endColumn":80},{"ruleId":"244","severity":1,"message":"245","line":12,"column":6,"nodeType":"246","endLine":12,"endColumn":17,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":18,"column":6,"nodeType":"246","endLine":18,"endColumn":8,"suggestions":"249"},{"ruleId":"174","severity":1,"message":"185","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":26},{"ruleId":"174","severity":1,"message":"250","line":12,"column":9,"nodeType":"176","messageId":"177","endLine":12,"endColumn":19},{"ruleId":"174","severity":1,"message":"185","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":26},{"ruleId":"174","severity":1,"message":"182","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":27},{"ruleId":"174","severity":1,"message":"183","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":27},{"ruleId":"174","severity":1,"message":"184","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":22},{"ruleId":"174","severity":1,"message":"251","line":14,"column":9,"nodeType":"176","messageId":"177","endLine":14,"endColumn":20},{"ruleId":"174","severity":1,"message":"190","line":23,"column":5,"nodeType":"176","messageId":"177","endLine":23,"endColumn":11},{"ruleId":"174","severity":1,"message":"192","line":25,"column":5,"nodeType":"176","messageId":"177","endLine":25,"endColumn":12},{"ruleId":"174","severity":1,"message":"193","line":26,"column":5,"nodeType":"176","messageId":"177","endLine":26,"endColumn":14},{"ruleId":"174","severity":1,"message":"195","line":28,"column":5,"nodeType":"176","messageId":"177","endLine":28,"endColumn":15},{"ruleId":"174","severity":1,"message":"252","line":29,"column":5,"nodeType":"176","messageId":"177","endLine":29,"endColumn":21},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["253"],"no-negated-in-lhs",["254"],"'Web3ReactProvider' is defined but never used.","'InjectedConnector' is defined but never used.","'Web3Provider' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'walletconnect' is defined but never used.","'resetWalletConnector' is defined but never used.","'MyContext' is assigned a value but never used.","'active' is assigned a value but never used.","'account' is assigned a value but never used.","'library' is assigned a value but never used.","'connector' is assigned a value but never used.","'activate' is assigned a value but never used.","'deactivate' is assigned a value but never used.","'handleConnect' is assigned a value but never used.","'connectCoinbaseSimple' is assigned a value but never used.","'that' is assigned a value but never used.","'network' is assigned a value but never used.","'EthLogo' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'maticPriceFeedContract' is assigned a value but never used.","'showToast' is assigned a value but never used.","'setShowToast' is assigned a value but never used.","'userAccountAddress' is assigned a value but never used.","'setUserAccountAddress' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'dominoContract' is assigned a value but never used.","'NavLink' is defined but never used.","'faGift' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'Link' is defined but never used.","'faBolt' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"255","text":"256"},{"range":"257","text":"256"},{"range":"258","text":"256"},{"range":"259","text":"256"},{"range":"260","text":"256"},{"range":"261","text":"256"},{"range":"262","text":"256"},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["263"],"React Hook useEffect has a missing dependency: 'show'. Either include it or remove the dependency array.",["264"],"'_openToast' is assigned a value but never used.","'DataContext' is defined but never used.","'web3reactContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[799,799]," rel=\"noreferrer\"",[1097,1097],[1348,1348],[1601,1601],[1831,1831],[2133,2133],[2294,2294],{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [onClose, showFlash]",{"range":"269","text":"270"},"Update the dependencies array to be: [show]",{"range":"271","text":"272"},[315,326],"[onClose, showFlash]",[403,405],"[show]"]